{
  "openapi": "3.0.1",
  "info": {
    "title": "Fastag-Issuance",
    "description": "Fastag Issuance Management System plays vital role in the Tag Issuance which helps in issuing a new fastag to a customer and register it at NETC/NPCI and also helps in maintaining various stages throughout its lifecycle.The lifecycle management of each new fastag issued is done by this application.The application also serves inbound calls from wallet-system and oath-system to manage the state of tags for each customer depending on the state and balance of customer.Application always keep a sync of fastag and customer data with NPCI in order to maintain correct tag status.",
    "version": "0.0.1-SNAPSHOT"
  },
  "servers": [
    {
      "url": "http://fastag-issuer-issuance4-nonprod.paytmdgt.io",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Corporate Issuance Resource",
      "description": "Endpoints for handling issuance process for a corporate"
    },
    {
      "name": "Ecommerce Pre-validate Resource",
      "description": "Endpoints for processing pre-validation for tag coming from Ecommerce Channel"
    },
    {
      "name": "Tag Suspension Endpoints",
      "description": "Endpoints for suspend or unsuspend tag using toggle at NPCI and Paytm"
    },
    {
      "name": "Tag Suspension Endpoints for Dashboard",
      "description": "Endpoints for suspend or unsuspend tag using toggle at NPCI and Paytm"
    },
    {
      "name": "Tag Issuance Endpoints for OEM Channel",
      "description": "Endpoints for Issuance and managing tags for various functionalities through OEM channel"
    },
    {
      "name": "Resource for Managing OEM Pending Issuance",
      "description": "Endpoints for Issuance and managing for tags whose issuance are pending through OEM channel"
    },
    {
      "name": "HealthEndpoints",
      "description": "Endpoints for system health check"
    },
    {
      "name": "Paytm Wallet CallBack Resource",
      "description": "Endpoints for processing paytm wallet callback and provide respective response"
    },
    {
      "name": "Tag Issuance Endpoints for OEM Channel via dashboard",
      "description": "Endpoints for Issuance and managing tags for various functionalities through OEM channel"
    },
    {
      "name": "Payment Gateway CallBack Resource",
      "description": "Endpoints for processing payment gateway callback and provide respective response for a corporate"
    },
    {
      "name": "Tag Issuance Endpoints for V3",
      "description": "Endpoints for Issuance Dropdown List for v3"
    },
    {
      "name": "Lead Controller Resources",
      "description": "Endpoints for Creating a lead and fetching a lead data"
    },
    {
      "name": "Tag Sub-Wallet Replenish",
      "description": "Endpoints for replenishing sub-wallet for a tag"
    },
    {
      "name": "IHMCL Tag Detail Endpoint",
      "description": "Endpoints for fetching tag details from NPCI for IHMCL Tags"
    },
    {
      "name": "RMN Transfer Acceptance Resource",
      "description": "Endpoints for accepting an RMN Request for a tag"
    },
    {
      "name": "Tag Issuance Endpoints for Ecommerce",
      "description": "Endpoints for Issuance and managing fulfillment for Ecommerce"
    },
    {
      "name": "Cron Resource",
      "description": "Endpoints for all cron jobs"
    },
    {
      "name": "Vehicle Grouping Endpoints",
      "description": "Endpoints for flexibility to modify the limits of the groups, add new vehicles to the groups, transfer a vehicle from one group to another, disable a group, delete a group"
    },
    {
      "name": "NPCI Operation Resource",
      "description": "Endpoints for managing NPCI state for a tag and fetching its info"
    },
    {
      "name": "Corporate Issuance Dropdown Resource",
      "description": "Endpoints for listing dropdown for corporates"
    },
    {
      "name": "Efkon Tag Deposit Update Resource",
      "description": "Efkon Tag Deposit Update API"
    },
    {
      "name": "Tag Closure Endpoints Resource",
      "description": "Endpoints for managing tag closure process for closing tags for different channel"
    },
    {
      "name": "Admin Controller Resource",
      "description": "Endpoints for retrying issuance , download Challan and remove tag from soft block"
    },
    {
      "name": "Third Party Corporate Party Management Resource",
      "description": "Endpoints for on-boarding a third party , third party corporate and perform bulk issuance"
    },
    {
      "name": "Tag Issuance Endpoints",
      "description": "Endpoints for Issuance and managing tags for various functionalities"
    }
  ],
  "paths": {
    "/v1/fastag/vehicleGrouping/updateGroup/{groupId}": {
      "put": {
        "tags": [
          "Vehicle Grouping Endpoints"
        ],
        "summary": "Used to update groups within their corporate fleet",
        "description": "This API is used for update details of groups using the corporate dashboard and update duration, vehicles, limit and other details",
        "operationId": "updateGroup",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Id of vehicle group",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains Create Vehicle Group request having details of group name, type, limit, duration etc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/vehicleGrouping/changeStatus/{groupId}": {
      "put": {
        "tags": [
          "Vehicle Grouping Endpoints"
        ],
        "summary": "Used to change status of a corporate vehicle group",
        "description": "This API is used for updating status of a vehicle group found by provided group Id",
        "operationId": "changeStatus",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "description": "Id of vehicle group",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains Change Status Request having details of status to be updated for groupId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/vehicleGrouping/addRemoveTagFromGroup": {
      "put": {
        "tags": [
          "Vehicle Grouping Endpoints"
        ],
        "summary": "Used to add/remove tags within a vehicle group",
        "description": "This API is used for addition or removal of a tag in a vehicle group",
        "operationId": "addRemoveTag",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains details of tags to be added/removed from a provided groupId group",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRemoveVehicleInGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddRemoveVehicleInGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/saveUserTnc": {
      "put": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Save user acceptance on Tnc",
        "description": "Save user acceptance on Tnc",
        "operationId": "saveUserTnc",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains details of mode and userId for user whose Tnc needs to be saved",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveUserTncRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUserTncResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/tags/{epcId}/state": {
      "put": {
        "tags": [
          "NPCI Operation Resource"
        ],
        "summary": "Process for updating status of a tag at NPCI",
        "description": "This API is used for processing for updating status of a tag at NPCI using tagId",
        "operationId": "manageException",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          },
          {
            "name": "epcId",
            "in": "path",
            "description": "epcId of Tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contains details for tagOperation , userId and state of tag to be updated at NPCI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManageExceptionTagRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success Status if no error encountered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/tags/{epcId}/info": {
      "put": {
        "tags": [
          "NPCI Operation Resource"
        ],
        "summary": "Process for fetching status of a tag at NPCI",
        "description": "This API is used for processing for fetching status of a tag at NPCI using tagId",
        "operationId": "manageTagEntry",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          },
          {
            "name": "epcId",
            "in": "path",
            "description": "epcId of Tag",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contains details for tagEntryKey and userId to be used for fetching details from NPCI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManageTagEntryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response containing VRN details and tag status at NPCI",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RespMngTagEntries"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/corporate/update": {
      "put": {
        "tags": [
          "Corporate Issuance Resource"
        ],
        "summary": "Allows user to update a Corporate Info ",
        "description": "This API is used to update information about a corporate using corporate Id or Corporate Name",
        "operationId": "editCorporate",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request contain information aabout corporate Id or Corporate Name",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CorporateEditRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Success response on successful update",
                  "allOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/removeFromSoftBlock": {
      "put": {
        "tags": [
          "Admin Controller Resource"
        ],
        "summary": "Process tag data and removes it from soft block for tsn provided",
        "description": "This api is used to unblock a tag issued by GG or Bc channel with TSN provided in request",
        "operationId": "removeFromSoftBlock",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSoftBlockRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveSoftBlockResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/initiateTagClosure": {
      "put": {
        "tags": [
          "Tag Closure Endpoints Resource"
        ],
        "summary": "Used to initiate closure for a tag",
        "description": "This api is used to initiate closure for a tag",
        "operationId": "initiateTagClosure",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          },
          {
            "name": "tsn",
            "in": "query",
            "description": "tsn of tag to be closed",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "source",
            "in": "header",
            "description": "Source of tag closure",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contains comment to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitiateTagClosureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiateTagClosureResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/forceCloseTag": {
      "put": {
        "tags": [
          "Tag Closure Endpoints Resource"
        ],
        "summary": "Used to force close an eligible tag",
        "description": "This api is used to forcefully close a tag which is eligible for closure",
        "operationId": "forceCloseTag",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          },
          {
            "name": "tsn",
            "in": "query",
            "description": "tsn of tag to be closed",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Contains comment to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForceClosureTagRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ForceCloseTagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/closeTags": {
      "put": {
        "tags": [
          "Tag Closure Endpoints Resource"
        ],
        "summary": "Used to closed tag permanently initiated for closure",
        "description": "This api is used to closed tag permanently initiated for closure",
        "operationId": "permanentlyCloseTags",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains list of tags to be closed",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseTagsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloseTagsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/closeAllEligibleTags": {
      "put": {
        "tags": [
          "Tag Closure Endpoints Resource"
        ],
        "summary": "Used to closed all eligible tags permanently",
        "description": "This api is used to closed all eligible tags permanently steps followed from initiation to closure",
        "operationId": "permanentlyCloseAllEligibleTags",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermanentCloseEligibleTagsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/fastag/issuance/order-placed/notify": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints for Ecommerce"
        ],
        "summary": "Used for validating ecommerce order",
        "description": "This api is used for validating ecommerce order and creating order if required",
        "operationId": "notificationForPlacedEcommerceOrder",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains Issuance Place Order Notify request having details of order id , item id, vrn  and customer id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlacedOrderNotificationRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateProcessOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/fastag/issuance/fulfillmentInfo": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints for Ecommerce"
        ],
        "summary": "Used for validating and issuing a tag for ecommerce",
        "description": "This API is used for issuing a tag came via ecommerce channel",
        "operationId": "fulfillmentInfoSync",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains Fulfillment request having details of order id , item id, vrn and tag",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FulfillmentInfoRequestV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success Status if no error is encountered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FulfillmentInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/fastag/issuance/3P/issuance": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints for Ecommerce"
        ],
        "summary": "Used for validating and issuing a tag for third party",
        "description": "This API is used for issuing a tag came via third party channel",
        "operationId": "fulfillmentInfoAsync",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains Third Party Fulfillment request having details of order id , item id, vrn  and tag",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThirdPartyFulfillmentInfoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success Status if no error is encountered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FulfillmentInfoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/order/preValidate": {
      "post": {
        "tags": [
          "Ecommerce Pre-validate Resource"
        ],
        "summary": "Pre Validate order",
        "description": "This api will pre Validate order.",
        "operationId": "prevalidateOrder",
        "parameters": [
          {
            "name": "client",
            "in": "query",
            "description": "client id pf ecom user",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contains pre-validate request having details of cart items, lead and tag for Ecommerce channel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreValidateOrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PreValidateOrderResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/vehicleGrouping/createGroup": {
      "post": {
        "tags": [
          "Vehicle Grouping Endpoints"
        ],
        "summary": "Used to create groups within their corporate fleet",
        "description": "This API is used for create groups using the corporate dashboard and add group name, type, limit and other details",
        "operationId": "createGroup",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains Create Vehicle Group request having details of group name, type, limit etc.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGroupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/validateVrn": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Validate vehicle number from efkon",
        "description": "This api will validate the vehicle registration number.",
        "operationId": "validateVrn",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains details of vehicle number to be validated with NPCI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateVehicleNoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success Response if no error encountered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/validateTag": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Validate Tag at FIS and NPCI",
        "description": "This api will validate the tag at FIS, that is is saleable or not and validate at NPCI as well",
        "operationId": "validateTag",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains details of tag sequence number needs to be verified with NPCI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateTagRequestV2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateTagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/validateIssuance": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Validate issuance for vehicle from OE",
        "description": "Validates IssuanceType on given Vehicle",
        "operationId": "validateIssuance",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains details of vehicle number to be validated with NPCI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateVRNIssuanceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateVRNIssuanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/validateEpcid": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Validates a tag with epcId ",
        "description": "This API is used to validate a tag using epcId through Efkon Service",
        "operationId": "isValidEPCId",
        "requestBody": {
          "description": "Contains details of epcId and phone number registered with tag",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateEPCIdRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateEPCIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/updateLeadStatus": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Update lead status",
        "description": "Update status of lead. This is being called by OE whenever there is some change in lead on OE side.",
        "operationId": "updateLeadStatus",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Contains details of lead and bank transaction details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLeadStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success if no error encountered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/tagStatus": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Verifies tag status with NPCI",
        "description": "This api is used to verify tag status with NPCI and return status response",
        "operationId": "tagStatus",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains details of tag and vrn whose status needs to be verified with NPCI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/tag/vinToVrn": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Updates tag vin to vrn",
        "description": "This API is used to update vehicle id (VIN) of a tag to its vehicle number(VRN)",
        "operationId": "vinToVrn",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Contains tsn , vrn and documents of tag whose vin needs to be updated ",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VinToVrnRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDocumentUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/tag/update": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Updated RC documents for tag",
        "description": "This api is used to Updated RC documents for tag",
        "operationId": "updateTagDocument",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          },
          {
            "name": "sso_token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contains details of tag , vrn and documents needed to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagDocumentUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDocumentUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/tag/rmn/accept": {
      "post": {
        "tags": [
          "RMN Transfer Acceptance Resource"
        ],
        "summary": "RMN Transfer for a tag to a new customer",
        "description": "This API is used to RMN Transfer for a tag to a new Customer",
        "operationId": "acceptTransfer",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains details of tag and destination customer for RMN Transfer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RmnTransferRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RmnTransferResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/tag/activate": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Activates tag and creates lead",
        "description": "This API is used to activate an ecommerce tag and creates lead for the tag",
        "operationId": "activateTag",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains status of tag needs to be activated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDocumentUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/reqDetailsIhmclTag": {
      "post": {
        "tags": [
          "IHMCL Tag Detail Endpoint"
        ],
        "summary": "Fetch Tag Details form NPCI for IHMCL Tags",
        "description": "This API is used for fetching Tag Details form NPCI for IHMCL Tags and validate tag in DB",
        "operationId": "ihmclTagDetail",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "SSO token for authentication of valid user"
          },
          {
            "name": "sso_token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contains vehicle number of tag used for fetching details of Tag",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TisIhmclTagDetailRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TisIhmclTagDetailResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/recommend/vehicleclass": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Recommend Vehicle Class",
        "description": "Recommend Vehicle CLass for User.This API will accept Gross Vehicle Weight(GVW) and No. of axle and suggest possible vehicle classes for new Fastag issuance",
        "operationId": "recommendVehicleClass",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains weight and number of axle of vehicle for recommendation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecommendVehicleClassRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecommendVehicleClassResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/preValidate": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Pre Validate order",
        "description": "This api will pre Validate order.",
        "operationId": "prevalidateOrder_1",
        "parameters": [
          {
            "name": "client",
            "in": "header",
            "description": "Client Id of user"
          },
          {
            "name": "client",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contains pre-validate request having details of cart items, lead and tag",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreValidateOrderRequestGGBC"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreValidateOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/order/paymentFailedNotify": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Notify order",
        "description": "This api will notify order.",
        "operationId": "notifyPaymentFail",
        "parameters": [
          {
            "name": "order_id",
            "in": "header",
            "description": "Order id Id of failed request"
          },
          {
            "name": "order_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Contains Notify request having details of cart items, lead and tag",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CartPaymentFailNotify"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success Status if no error is encountered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/notify": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Notify order",
        "description": "This api will notify order.",
        "operationId": "notify",
        "requestBody": {
          "description": "Contains Notify request having details of cart items, lead and tag",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success Status if no error is encountered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/netc/reqDetails": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Used to fetch vrn details from NPCI",
        "description": "This API is used to fetch tag vrn details and validates it through NPCI",
        "operationId": "netcReqDetails",
        "requestBody": {
          "description": "Contains vrn and tag id of tag for npci data fetch",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NetcReqDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NetcRespDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/issuanceForm": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Validate and Submit issuance form",
        "description": "Validate and Submit issuance form.",
        "operationId": "submitIssuanceForm",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "recon",
            "in": "query",
            "description": "Is request is from a recon job flag",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sales_app",
            "in": "query",
            "description": "Sales app of Tags (non-mandatory)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contains Validate Issuance request having details of tag to be issued",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateIssuanceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/fetchOELeadData": {
      "post": {
        "tags": [
          "Lead Controller Resources"
        ],
        "summary": "Process for fetching OE lead data using tag sequence number",
        "description": "This API is used for fetching OE lead data using tag sequence number",
        "operationId": "fetchLeadDetailByVrn",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Contains Tag Sequence Number for which lead data needed to be fetched",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FetchOELeadDataRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response of Fetching Lead Data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchOELeadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/create-lead": {
      "post": {
        "tags": [
          "Lead Controller Resources"
        ],
        "summary": "Process for Creating a lead for a tag",
        "description": "This API is used for Creating a lead for a tag with document details",
        "operationId": "createLead",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Contains tag details like vrn , tsn and other details along with document information needed to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDocumentLeadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response of Lead Creation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDocumentLeadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/buynow": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Buy Now API for issuing tag for OMS",
        "description": "This api is used to issue a tag with required parameters and through OMS",
        "operationId": "buyNowTag",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          },
          {
            "name": "orderId",
            "in": "header",
            "description": "orderId of Tag",
            "required": true
          },
          {
            "name": "sso_token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "allRequestParams",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/MultiValueMapStringString"
            }
          }
        ],
        "requestBody": {
          "description": "Contains details of tag , vrn and documents for which tag needed to be issued",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuyNowRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagDocumentUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/intissuance/tpcorporate/v1/partyOnboard": {
      "post": {
        "tags": [
          "Third Party Corporate Party Management Resource"
        ],
        "summary": "Onboard a new Third Party",
        "description": "Called for onboarding a new third party into system",
        "operationId": "onboardParty",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains details of client ID and notification url for third party on-boarding",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartyOnboardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyOnboardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/intissuance/tpcorporate/v1/onboard": {
      "post": {
        "tags": [
          "Third Party Corporate Party Management Resource"
        ],
        "summary": "Onboard 3P Corporate",
        "description": "Called for onboarding a new corporates into system from third party",
        "operationId": "onboardCorporate",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contains details of third party corporate to be onboarded for a third party",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CorporateOnboardRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CorporateOnboardResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/intissuance/tpcorporate/v1/issuance": {
      "post": {
        "tags": [
          "Third Party Corporate Party Management Resource"
        ],
        "summary": "Bulk Issuance",
        "description": "Called for Bulk Issuance to party's corporates",
        "operationId": "bulkIssuance",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contains two parts as request body Multipart File containing records according to BulkIssuanceRecordV2 and data part for request json string",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkIssuanceRecordV2"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartyCorporateIssuancePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartyCorporateIssuanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fastag/oem/pending-issuance/accept/self-linking/request": {
      "post": {
        "tags": [
          "Resource for Managing OEM Pending Issuance"
        ],
        "summary": "Allows user to accept the hard block request when customer accepts the notification link",
        "description": "This API is used to accept the hard block request when customer accepts the notification link",
        "operationId": "acceptSelfLinkingRequest",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptSelfLinkingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/fastag-issuer/corporate/payment/callback": {
      "post": {
        "tags": [
          "Payment Gateway CallBack Resource"
        ],
        "summary": "Handles PG Callback for Payment Call Back Response",
        "description": "This API is used to handle PG Callback for Payment Call Back Response",
        "operationId": "paymentCallBack",
        "requestBody": {
          "description": "Contains payment callback response used for handling callback",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaymentCallBackResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/suspendToggle": {
      "post": {
        "tags": [
          "Tag Suspension Endpoints for Dashboard"
        ],
        "summary": "Process for suspend/unsuspend a tag at NPCI and Paytm by Dashboard",
        "description": "This API is used for suspend/unsuspend a tag based on action provided in request with tag Id of tag to be processed",
        "operationId": "suspendTag",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          },
          {
            "name": "reportingHeaderForUserSuspend",
            "in": "header",
            "description": "reportingHeaderForUserSuspend",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contains Toggle suspend/unsuspend action along with tag epcId and userId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagSuspendToggleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response of Toggle Suspension/Unsuspension",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToggleSuspensionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/oem/verifyOTP": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints for OEM Channel via dashboard"
        ],
        "summary": "Verify OTP",
        "description": "Verify OTP.",
        "operationId": "verifyOtp",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains Otp to be verified for the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/VerifyOtpDasboardResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/oem/generateOTP": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints for OEM Channel via dashboard"
        ],
        "summary": "Generate OTP",
        "description": "Generate OTP.",
        "operationId": "generateOTP",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains Otp to be generated for the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateOtpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GenerateOtpResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/corporate/suggestionList": {
      "post": {
        "tags": [
          "Corporate Issuance Resource"
        ],
        "summary": "Auto Suggest List",
        "description": "This API is called to fetch a list of corporates having names matching with typed input",
        "operationId": "getAutoSuggestionListCorporate",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request contains information about Corporate Customer CorporateName",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAutoSuggestionListRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetAutoSuggestionListResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/corporate/search": {
      "post": {
        "tags": [
          "Corporate Issuance Resource"
        ],
        "summary": "Allows user to search a Corporate Info ",
        "description": "This API is used to get information about a corporate using corporate customer information",
        "operationId": "searchCorporate",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request contains information about Corporate Customer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CorporateSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "List of CorporateSearchResponse Dto",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CorporateSearchResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/corporate/pending": {
      "post": {
        "tags": [
          "Corporate Issuance Resource"
        ],
        "summary": "Pending Requests",
        "description": "This API is called to get Pending Requests of a Corporate",
        "operationId": "getPendingRequestsCorporate",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Offset Value for search criteria",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit Value for search criteria",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request contains information about Corporate Customer CorporateId and Corporate Status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPendingReqCorporateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetPendingReqCorporateResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/corporate/payment/status": {
      "post": {
        "tags": [
          "Corporate Issuance Resource"
        ],
        "summary": "Allows user to check Corporate Issuance Payment Status",
        "description": "This API is used to check Issuance Payment Status based on provided Issuance Request Id",
        "operationId": "checkIssuanceStatus",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request contains information about Corporate Customer request Id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CorporateIssuanceStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BaseResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/corporate/payment/resendLink": {
      "post": {
        "tags": [
          "Corporate Issuance Resource"
        ],
        "summary": "Allows user to Resend Payment Link",
        "description": "This API is used to check Payment Status based on provided Issuance Request Id and resend payment link if not done",
        "operationId": "resendPaymentLink",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request contains information about Corporate Customer request Id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CorporateIssuanceStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BaseResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/corporate/payment/discard": {
      "post": {
        "tags": [
          "Corporate Issuance Resource"
        ],
        "summary": "Allows user to discard Corporate Issuance",
        "description": "This API is used to check Issuance Status based on provided Issuance Request Id and discard issuance request if not valid",
        "operationId": "discardCorporateIssuance",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request contains information about Corporate Customer request Id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CorporateIssuanceStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BaseResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/corporate/history": {
      "post": {
        "tags": [
          "Corporate Issuance Resource"
        ],
        "summary": "Corporate Issuance History",
        "description": "This API is called to get Issuance History for a Corporate",
        "operationId": "getCorporateHistory",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Offset Value for search criteria",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit Value for search criteria",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Request contains information about Corporate Customer CorporateId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCorporateHistoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetCorporateHistoryResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/bulk": {
      "post": {
        "tags": [
          "Corporate Issuance Resource"
        ],
        "summary": "Bulk Issuance",
        "description": "Called for Bulk Issuance to corporates",
        "operationId": "bulkIssuance_1",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains two parts as request body Multipart File containing records according to BulkIssuanceRecord and data part for request json string",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkIssuanceRecordV2"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CorporateIssuanceRequestV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/applicableDropDown/corporate": {
      "post": {
        "tags": [
          "Corporate Issuance Resource"
        ],
        "summary": "Applicable Dropdown",
        "description": "Get applicable VC wise product",
        "operationId": "applicableDropdown",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Multipart File containing records according to BulkIssuanceRecord as request part",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/BulkIssuanceRecordV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDropdownResponseV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/wallet/callback/initialTopUp": {
      "post": {
        "tags": [
          "Paytm Wallet CallBack Resource"
        ],
        "summary": "Handles MerchantCallbackResponse came from gratification to add initial top",
        "description": "This API is used to Handles MerchantCallbackResponse came from gratification to add initial top",
        "operationId": "initialTopUpCallback",
        "requestBody": {
          "description": "Contains MerchantCallbackResponse as request used for handling callback and processing initial top-up",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MerchantCallbackResponse"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success if no error encountered",
            "content": {
              "application/json": {

              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/wallet/callback/gratification": {
      "post": {
        "tags": [
          "Paytm Wallet CallBack Resource"
        ],
        "summary": "Handles Paytm Wallet Callback for Payment Call Back Response",
        "description": "This API is used to handle Paytm Wallet Callback for Payment Call Back Response",
        "operationId": "walletCallback",
        "requestBody": {
          "description": "Contains paytm wallet callback request used for handling callback",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "method": {
                    "type": "string"
                  },
                  "session": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "creationTime": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "lastAccessedTime": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "maxInactiveInterval": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "sessionContext": {
                        "type": "object",
                        "properties": {
                          "ids": {
                            "type": "object",
                            "deprecated": true
                          }
                        },
                        "deprecated": true
                      },
                      "valueNames": {
                        "type": "array",
                        "deprecated": true,
                        "items": {
                          "type": "string"
                        }
                      },
                      "new": {
                        "type": "boolean"
                      },
                      "attributeNames": {
                        "type": "object"
                      },
                      "servletContext": {
                        "type": "object",
                        "properties": {
                          "classLoader": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "registeredAsParallelCapable": {
                                "type": "boolean"
                              },
                              "parent": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "registeredAsParallelCapable": {
                                    "type": "boolean"
                                  },
                                  "unnamedModule": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "descriptor": {
                                        "type": "object",
                                        "properties": {
                                          "open": {
                                            "type": "boolean"
                                          },
                                          "automatic": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "named": {
                                        "type": "boolean"
                                      },
                                      "annotations": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        }
                                      },
                                      "declaredAnnotations": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        }
                                      },
                                      "packages": {
                                        "uniqueItems": true,
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "layer": {
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "definedPackages": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "annotations": {
                                          "type": "array",
                                          "items": {
                                            "type": "object"
                                          }
                                        },
                                        "declaredAnnotations": {
                                          "type": "array",
                                          "items": {
                                            "type": "object"
                                          }
                                        },
                                        "sealed": {
                                          "type": "boolean"
                                        },
                                        "specificationTitle": {
                                          "type": "string"
                                        },
                                        "specificationVersion": {
                                          "type": "string"
                                        },
                                        "specificationVendor": {
                                          "type": "string"
                                        },
                                        "implementationTitle": {
                                          "type": "string"
                                        },
                                        "implementationVersion": {
                                          "type": "string"
                                        },
                                        "implementationVendor": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "defaultAssertionStatus": {
                                    "type": "boolean",
                                    "writeOnly": true
                                  }
                                }
                              },
                              "unnamedModule": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "descriptor": {
                                    "type": "object",
                                    "properties": {
                                      "open": {
                                        "type": "boolean"
                                      },
                                      "automatic": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "named": {
                                    "type": "boolean"
                                  },
                                  "annotations": {
                                    "type": "array",
                                    "items": {
                                      "type": "object"
                                    }
                                  },
                                  "declaredAnnotations": {
                                    "type": "array",
                                    "items": {
                                      "type": "object"
                                    }
                                  },
                                  "packages": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "layer": {
                                    "type": "object"
                                  }
                                }
                              },
                              "definedPackages": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "annotations": {
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    },
                                    "declaredAnnotations": {
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    },
                                    "sealed": {
                                      "type": "boolean"
                                    },
                                    "specificationTitle": {
                                      "type": "string"
                                    },
                                    "specificationVersion": {
                                      "type": "string"
                                    },
                                    "specificationVendor": {
                                      "type": "string"
                                    },
                                    "implementationTitle": {
                                      "type": "string"
                                    },
                                    "implementationVersion": {
                                      "type": "string"
                                    },
                                    "implementationVendor": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "defaultAssertionStatus": {
                                "type": "boolean",
                                "writeOnly": true
                              }
                            }
                          },
                          "majorVersion": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "minorVersion": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "sessionTimeout": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "servletRegistrations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "runAsRole": {
                                  "type": "string"
                                },
                                "mappings": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "className": {
                                  "type": "string"
                                },
                                "initParameters": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "filterRegistrations": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "servletNameMappings": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "urlPatternMappings": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "type": "string"
                                },
                                "className": {
                                  "type": "string"
                                },
                                "initParameters": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "sessionCookieConfig": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "path": {
                                "type": "string"
                              },
                              "comment": {
                                "type": "string"
                              },
                              "maxAge": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "httpOnly": {
                                "type": "boolean"
                              },
                              "secure": {
                                "type": "boolean"
                              },
                              "domain": {
                                "type": "string"
                              }
                            }
                          },
                          "sessionTrackingModes": {
                            "uniqueItems": true,
                            "type": "array",
                            "writeOnly": true,
                            "items": {
                              "type": "string",
                              "enum": [
                                "COOKIE",
                                "URL",
                                "SSL"
                              ]
                            }
                          },
                          "defaultSessionTrackingModes": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "COOKIE",
                                "URL",
                                "SSL"
                              ]
                            }
                          },
                          "effectiveSessionTrackingModes": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "COOKIE",
                                "URL",
                                "SSL"
                              ]
                            }
                          },
                          "jspConfigDescriptor": {
                            "type": "object",
                            "properties": {
                              "taglibs": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "taglibURI": {
                                      "type": "string"
                                    },
                                    "taglibLocation": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "jspPropertyGroups": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "buffer": {
                                      "type": "string"
                                    },
                                    "elIgnored": {
                                      "type": "string"
                                    },
                                    "pageEncoding": {
                                      "type": "string"
                                    },
                                    "scriptingInvalid": {
                                      "type": "string"
                                    },
                                    "isXml": {
                                      "type": "string"
                                    },
                                    "includePreludes": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "includeCodas": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "deferredSyntaxAllowedAsLiteral": {
                                      "type": "string"
                                    },
                                    "trimDirectiveWhitespaces": {
                                      "type": "string"
                                    },
                                    "errorOnUndeclaredNamespace": {
                                      "type": "string"
                                    },
                                    "defaultContentType": {
                                      "type": "string"
                                    },
                                    "urlPatterns": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "virtualServerName": {
                            "type": "string"
                          },
                          "requestCharacterEncoding": {
                            "type": "string"
                          },
                          "responseCharacterEncoding": {
                            "type": "string"
                          },
                          "effectiveMajorVersion": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "effectiveMinorVersion": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "servlets": {
                            "type": "object",
                            "deprecated": true
                          },
                          "servletNames": {
                            "type": "object",
                            "deprecated": true
                          },
                          "serverInfo": {
                            "type": "string"
                          },
                          "servletContextName": {
                            "type": "string"
                          },
                          "initParameterNames": {
                            "type": "object"
                          },
                          "attributeNames": {
                            "type": "object"
                          },
                          "contextPath": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "authType": {
                    "type": "string"
                  },
                  "requestURI": {
                    "type": "string"
                  },
                  "httpServletMapping": {
                    "type": "object",
                    "properties": {
                      "pattern": {
                        "type": "string"
                      },
                      "servletName": {
                        "type": "string"
                      },
                      "mappingMatch": {
                        "type": "string",
                        "enum": [
                          "CONTEXT_ROOT",
                          "DEFAULT",
                          "EXACT",
                          "EXTENSION",
                          "PATH"
                        ]
                      },
                      "matchValue": {
                        "type": "string"
                      }
                    }
                  },
                  "pathInfo": {
                    "type": "string"
                  },
                  "headerNames": {
                    "type": "object"
                  },
                  "userPrincipal": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "remoteUser": {
                    "type": "string"
                  },
                  "parts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "size": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "inputStream": {
                          "type": "object"
                        },
                        "headerNames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "submittedFileName": {
                          "type": "string"
                        },
                        "contentType": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "requestURL": {
                    "type": "object",
                    "properties": {
                      "length": {
                        "type": "integer",
                        "format": "int32",
                        "writeOnly": true
                      },
                      "empty": {
                        "type": "boolean"
                      }
                    }
                  },
                  "contextPath": {
                    "type": "string"
                  },
                  "servletPath": {
                    "type": "string"
                  },
                  "cookies": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "version": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "comment": {
                          "type": "string"
                        },
                        "domain": {
                          "type": "string"
                        },
                        "maxAge": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "path": {
                          "type": "string"
                        },
                        "secure": {
                          "type": "boolean"
                        },
                        "httpOnly": {
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "pathTranslated": {
                    "type": "string"
                  },
                  "requestedSessionId": {
                    "type": "string"
                  },
                  "requestedSessionIdValid": {
                    "type": "boolean"
                  },
                  "requestedSessionIdFromCookie": {
                    "type": "boolean"
                  },
                  "requestedSessionIdFromURL": {
                    "type": "boolean"
                  },
                  "requestedSessionIdFromUrl": {
                    "type": "boolean",
                    "deprecated": true
                  },
                  "trailerFields": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "trailerFieldsReady": {
                    "type": "boolean"
                  },
                  "queryString": {
                    "type": "string"
                  },
                  "scheme": {
                    "type": "string"
                  },
                  "inputStream": {
                    "type": "object",
                    "properties": {
                      "readListener": {
                        "type": "object",
                        "writeOnly": true
                      },
                      "ready": {
                        "type": "boolean"
                      },
                      "finished": {
                        "type": "boolean"
                      }
                    }
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "contentLength": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "locale": {
                    "type": "object",
                    "properties": {
                      "language": {
                        "type": "string"
                      },
                      "script": {
                        "type": "string"
                      },
                      "variant": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "unicodeLocaleAttributes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "unicodeLocaleKeys": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "displayLanguage": {
                        "type": "string"
                      },
                      "displayScript": {
                        "type": "string"
                      },
                      "displayCountry": {
                        "type": "string"
                      },
                      "displayVariant": {
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string"
                      },
                      "extensionKeys": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "iso3Language": {
                        "type": "string"
                      },
                      "iso3Country": {
                        "type": "string"
                      }
                    }
                  },
                  "localPort": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "characterEncoding": {
                    "type": "string"
                  },
                  "secure": {
                    "type": "boolean"
                  },
                  "remotePort": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "localAddr": {
                    "type": "string"
                  },
                  "asyncStarted": {
                    "type": "boolean"
                  },
                  "asyncSupported": {
                    "type": "boolean"
                  },
                  "asyncContext": {
                    "type": "object",
                    "properties": {
                      "timeout": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "response": {
                        "type": "object",
                        "properties": {
                          "locale": {
                            "type": "object",
                            "properties": {
                              "language": {
                                "type": "string"
                              },
                              "script": {
                                "type": "string"
                              },
                              "variant": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "unicodeLocaleAttributes": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "unicodeLocaleKeys": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "displayLanguage": {
                                "type": "string"
                              },
                              "displayScript": {
                                "type": "string"
                              },
                              "displayCountry": {
                                "type": "string"
                              },
                              "displayVariant": {
                                "type": "string"
                              },
                              "displayName": {
                                "type": "string"
                              },
                              "extensionKeys": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "iso3Language": {
                                "type": "string"
                              },
                              "iso3Country": {
                                "type": "string"
                              }
                            }
                          },
                          "bufferSize": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "characterEncoding": {
                            "type": "string"
                          },
                          "contentLengthLong": {
                            "type": "integer",
                            "format": "int64",
                            "writeOnly": true
                          },
                          "committed": {
                            "type": "boolean"
                          },
                          "writer": {
                            "type": "object"
                          },
                          "outputStream": {
                            "type": "object",
                            "properties": {
                              "ready": {
                                "type": "boolean"
                              },
                              "writeListener": {
                                "type": "object",
                                "writeOnly": true
                              }
                            }
                          },
                          "contentType": {
                            "type": "string"
                          },
                          "contentLength": {
                            "type": "integer",
                            "format": "int32",
                            "writeOnly": true
                          }
                        }
                      },
                      "request": {
                        "type": "object",
                        "properties": {
                          "scheme": {
                            "type": "string"
                          },
                          "inputStream": {
                            "type": "object",
                            "properties": {
                              "readListener": {
                                "type": "object",
                                "writeOnly": true
                              },
                              "ready": {
                                "type": "boolean"
                              },
                              "finished": {
                                "type": "boolean"
                              }
                            }
                          },
                          "protocol": {
                            "type": "string"
                          },
                          "contentLength": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "locale": {
                            "type": "object",
                            "properties": {
                              "language": {
                                "type": "string"
                              },
                              "script": {
                                "type": "string"
                              },
                              "variant": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "unicodeLocaleAttributes": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "unicodeLocaleKeys": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "displayLanguage": {
                                "type": "string"
                              },
                              "displayScript": {
                                "type": "string"
                              },
                              "displayCountry": {
                                "type": "string"
                              },
                              "displayVariant": {
                                "type": "string"
                              },
                              "displayName": {
                                "type": "string"
                              },
                              "extensionKeys": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "iso3Language": {
                                "type": "string"
                              },
                              "iso3Country": {
                                "type": "string"
                              }
                            }
                          },
                          "localPort": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "characterEncoding": {
                            "type": "string"
                          },
                          "secure": {
                            "type": "boolean"
                          },
                          "remotePort": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "localAddr": {
                            "type": "string"
                          },
                          "asyncStarted": {
                            "type": "boolean"
                          },
                          "asyncSupported": {
                            "type": "boolean"
                          },
                          "dispatcherType": {
                            "type": "string",
                            "enum": [
                              "FORWARD",
                              "INCLUDE",
                              "REQUEST",
                              "ASYNC",
                              "ERROR"
                            ]
                          },
                          "parameterMap": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "serverName": {
                            "type": "string"
                          },
                          "serverPort": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "remoteAddr": {
                            "type": "string"
                          },
                          "remoteHost": {
                            "type": "string"
                          },
                          "locales": {
                            "type": "object"
                          },
                          "attributeNames": {
                            "type": "object"
                          },
                          "servletContext": {
                            "type": "object",
                            "properties": {
                              "classLoader": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "registeredAsParallelCapable": {
                                    "type": "boolean"
                                  },
                                  "parent": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "registeredAsParallelCapable": {
                                        "type": "boolean"
                                      },
                                      "unnamedModule": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "descriptor": {
                                            "type": "object",
                                            "properties": {
                                              "open": {
                                                "type": "boolean"
                                              },
                                              "automatic": {
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "named": {
                                            "type": "boolean"
                                          },
                                          "annotations": {
                                            "type": "array",
                                            "items": {
                                              "type": "object"
                                            }
                                          },
                                          "declaredAnnotations": {
                                            "type": "array",
                                            "items": {
                                              "type": "object"
                                            }
                                          },
                                          "packages": {
                                            "uniqueItems": true,
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "layer": {
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "definedPackages": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "annotations": {
                                              "type": "array",
                                              "items": {
                                                "type": "object"
                                              }
                                            },
                                            "declaredAnnotations": {
                                              "type": "array",
                                              "items": {
                                                "type": "object"
                                              }
                                            },
                                            "sealed": {
                                              "type": "boolean"
                                            },
                                            "specificationTitle": {
                                              "type": "string"
                                            },
                                            "specificationVersion": {
                                              "type": "string"
                                            },
                                            "specificationVendor": {
                                              "type": "string"
                                            },
                                            "implementationTitle": {
                                              "type": "string"
                                            },
                                            "implementationVersion": {
                                              "type": "string"
                                            },
                                            "implementationVendor": {
                                              "type": "string"
                                            }
                                          }
                                        }
                                      },
                                      "defaultAssertionStatus": {
                                        "type": "boolean",
                                        "writeOnly": true
                                      }
                                    }
                                  },
                                  "unnamedModule": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "descriptor": {
                                        "type": "object",
                                        "properties": {
                                          "open": {
                                            "type": "boolean"
                                          },
                                          "automatic": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "named": {
                                        "type": "boolean"
                                      },
                                      "annotations": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        }
                                      },
                                      "declaredAnnotations": {
                                        "type": "array",
                                        "items": {
                                          "type": "object"
                                        }
                                      },
                                      "packages": {
                                        "uniqueItems": true,
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "layer": {
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "definedPackages": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "annotations": {
                                          "type": "array",
                                          "items": {
                                            "type": "object"
                                          }
                                        },
                                        "declaredAnnotations": {
                                          "type": "array",
                                          "items": {
                                            "type": "object"
                                          }
                                        },
                                        "sealed": {
                                          "type": "boolean"
                                        },
                                        "specificationTitle": {
                                          "type": "string"
                                        },
                                        "specificationVersion": {
                                          "type": "string"
                                        },
                                        "specificationVendor": {
                                          "type": "string"
                                        },
                                        "implementationTitle": {
                                          "type": "string"
                                        },
                                        "implementationVersion": {
                                          "type": "string"
                                        },
                                        "implementationVendor": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "defaultAssertionStatus": {
                                    "type": "boolean",
                                    "writeOnly": true
                                  }
                                }
                              },
                              "majorVersion": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "minorVersion": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "sessionTimeout": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "servletRegistrations": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "runAsRole": {
                                      "type": "string"
                                    },
                                    "mappings": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "className": {
                                      "type": "string"
                                    },
                                    "initParameters": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "filterRegistrations": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "object",
                                  "properties": {
                                    "servletNameMappings": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "urlPatternMappings": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "className": {
                                      "type": "string"
                                    },
                                    "initParameters": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "sessionCookieConfig": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "comment": {
                                    "type": "string"
                                  },
                                  "maxAge": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "httpOnly": {
                                    "type": "boolean"
                                  },
                                  "secure": {
                                    "type": "boolean"
                                  },
                                  "domain": {
                                    "type": "string"
                                  }
                                }
                              },
                              "sessionTrackingModes": {
                                "uniqueItems": true,
                                "type": "array",
                                "writeOnly": true,
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "COOKIE",
                                    "URL",
                                    "SSL"
                                  ]
                                }
                              },
                              "defaultSessionTrackingModes": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "COOKIE",
                                    "URL",
                                    "SSL"
                                  ]
                                }
                              },
                              "effectiveSessionTrackingModes": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "COOKIE",
                                    "URL",
                                    "SSL"
                                  ]
                                }
                              },
                              "jspConfigDescriptor": {
                                "type": "object",
                                "properties": {
                                  "taglibs": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "taglibURI": {
                                          "type": "string"
                                        },
                                        "taglibLocation": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "jspPropertyGroups": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "buffer": {
                                          "type": "string"
                                        },
                                        "elIgnored": {
                                          "type": "string"
                                        },
                                        "pageEncoding": {
                                          "type": "string"
                                        },
                                        "scriptingInvalid": {
                                          "type": "string"
                                        },
                                        "isXml": {
                                          "type": "string"
                                        },
                                        "includePreludes": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "includeCodas": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "deferredSyntaxAllowedAsLiteral": {
                                          "type": "string"
                                        },
                                        "trimDirectiveWhitespaces": {
                                          "type": "string"
                                        },
                                        "errorOnUndeclaredNamespace": {
                                          "type": "string"
                                        },
                                        "defaultContentType": {
                                          "type": "string"
                                        },
                                        "urlPatterns": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "virtualServerName": {
                                "type": "string"
                              },
                              "requestCharacterEncoding": {
                                "type": "string"
                              },
                              "responseCharacterEncoding": {
                                "type": "string"
                              },
                              "effectiveMajorVersion": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "effectiveMinorVersion": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "servlets": {
                                "type": "object",
                                "deprecated": true
                              },
                              "servletNames": {
                                "type": "object",
                                "deprecated": true
                              },
                              "serverInfo": {
                                "type": "string"
                              },
                              "servletContextName": {
                                "type": "string"
                              },
                              "initParameterNames": {
                                "type": "object"
                              },
                              "attributeNames": {
                                "type": "object"
                              },
                              "contextPath": {
                                "type": "string"
                              }
                            }
                          },
                          "reader": {
                            "type": "object"
                          },
                          "parameterNames": {
                            "type": "object"
                          },
                          "contentLengthLong": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "contentType": {
                            "type": "string"
                          },
                          "localName": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "dispatcherType": {
                    "type": "string",
                    "enum": [
                      "FORWARD",
                      "INCLUDE",
                      "REQUEST",
                      "ASYNC",
                      "ERROR"
                    ]
                  },
                  "parameterMap": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "serverName": {
                    "type": "string"
                  },
                  "serverPort": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "remoteAddr": {
                    "type": "string"
                  },
                  "remoteHost": {
                    "type": "string"
                  },
                  "locales": {
                    "type": "object"
                  },
                  "attributeNames": {
                    "type": "object"
                  },
                  "servletContext": {
                    "type": "object",
                    "properties": {
                      "classLoader": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "registeredAsParallelCapable": {
                            "type": "boolean"
                          },
                          "parent": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "registeredAsParallelCapable": {
                                "type": "boolean"
                              },
                              "unnamedModule": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "descriptor": {
                                    "type": "object",
                                    "properties": {
                                      "open": {
                                        "type": "boolean"
                                      },
                                      "automatic": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "named": {
                                    "type": "boolean"
                                  },
                                  "annotations": {
                                    "type": "array",
                                    "items": {
                                      "type": "object"
                                    }
                                  },
                                  "declaredAnnotations": {
                                    "type": "array",
                                    "items": {
                                      "type": "object"
                                    }
                                  },
                                  "packages": {
                                    "uniqueItems": true,
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "layer": {
                                    "type": "object"
                                  }
                                }
                              },
                              "definedPackages": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "annotations": {
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    },
                                    "declaredAnnotations": {
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    },
                                    "sealed": {
                                      "type": "boolean"
                                    },
                                    "specificationTitle": {
                                      "type": "string"
                                    },
                                    "specificationVersion": {
                                      "type": "string"
                                    },
                                    "specificationVendor": {
                                      "type": "string"
                                    },
                                    "implementationTitle": {
                                      "type": "string"
                                    },
                                    "implementationVersion": {
                                      "type": "string"
                                    },
                                    "implementationVendor": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "defaultAssertionStatus": {
                                "type": "boolean",
                                "writeOnly": true
                              }
                            }
                          },
                          "unnamedModule": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "descriptor": {
                                "type": "object",
                                "properties": {
                                  "open": {
                                    "type": "boolean"
                                  },
                                  "automatic": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "named": {
                                "type": "boolean"
                              },
                              "annotations": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "declaredAnnotations": {
                                "type": "array",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "packages": {
                                "uniqueItems": true,
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "layer": {
                                "type": "object"
                              }
                            }
                          },
                          "definedPackages": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "annotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "declaredAnnotations": {
                                  "type": "array",
                                  "items": {
                                    "type": "object"
                                  }
                                },
                                "sealed": {
                                  "type": "boolean"
                                },
                                "specificationTitle": {
                                  "type": "string"
                                },
                                "specificationVersion": {
                                  "type": "string"
                                },
                                "specificationVendor": {
                                  "type": "string"
                                },
                                "implementationTitle": {
                                  "type": "string"
                                },
                                "implementationVersion": {
                                  "type": "string"
                                },
                                "implementationVendor": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "defaultAssertionStatus": {
                            "type": "boolean",
                            "writeOnly": true
                          }
                        }
                      },
                      "majorVersion": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "minorVersion": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "sessionTimeout": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "servletRegistrations": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "runAsRole": {
                              "type": "string"
                            },
                            "mappings": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "className": {
                              "type": "string"
                            },
                            "initParameters": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "filterRegistrations": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "servletNameMappings": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "urlPatternMappings": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "className": {
                              "type": "string"
                            },
                            "initParameters": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "sessionCookieConfig": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "path": {
                            "type": "string"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "maxAge": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "httpOnly": {
                            "type": "boolean"
                          },
                          "secure": {
                            "type": "boolean"
                          },
                          "domain": {
                            "type": "string"
                          }
                        }
                      },
                      "sessionTrackingModes": {
                        "uniqueItems": true,
                        "type": "array",
                        "writeOnly": true,
                        "items": {
                          "type": "string",
                          "enum": [
                            "COOKIE",
                            "URL",
                            "SSL"
                          ]
                        }
                      },
                      "defaultSessionTrackingModes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "COOKIE",
                            "URL",
                            "SSL"
                          ]
                        }
                      },
                      "effectiveSessionTrackingModes": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "COOKIE",
                            "URL",
                            "SSL"
                          ]
                        }
                      },
                      "jspConfigDescriptor": {
                        "type": "object",
                        "properties": {
                          "taglibs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "taglibURI": {
                                  "type": "string"
                                },
                                "taglibLocation": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "jspPropertyGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "buffer": {
                                  "type": "string"
                                },
                                "elIgnored": {
                                  "type": "string"
                                },
                                "pageEncoding": {
                                  "type": "string"
                                },
                                "scriptingInvalid": {
                                  "type": "string"
                                },
                                "isXml": {
                                  "type": "string"
                                },
                                "includePreludes": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "includeCodas": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "deferredSyntaxAllowedAsLiteral": {
                                  "type": "string"
                                },
                                "trimDirectiveWhitespaces": {
                                  "type": "string"
                                },
                                "errorOnUndeclaredNamespace": {
                                  "type": "string"
                                },
                                "defaultContentType": {
                                  "type": "string"
                                },
                                "urlPatterns": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "virtualServerName": {
                        "type": "string"
                      },
                      "requestCharacterEncoding": {
                        "type": "string"
                      },
                      "responseCharacterEncoding": {
                        "type": "string"
                      },
                      "effectiveMajorVersion": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "effectiveMinorVersion": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "servlets": {
                        "type": "object",
                        "deprecated": true
                      },
                      "servletNames": {
                        "type": "object",
                        "deprecated": true
                      },
                      "serverInfo": {
                        "type": "string"
                      },
                      "servletContextName": {
                        "type": "string"
                      },
                      "initParameterNames": {
                        "type": "object"
                      },
                      "attributeNames": {
                        "type": "object"
                      },
                      "contextPath": {
                        "type": "string"
                      }
                    }
                  },
                  "reader": {
                    "type": "object"
                  },
                  "parameterNames": {
                    "type": "object"
                  },
                  "contentLengthLong": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "contentType": {
                    "type": "string"
                  },
                  "localName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success if no error encountered",
            "content": {
              "application/json": {

              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/validateReplacement": {
      "post": {
        "tags": [
          "Tag Suspension Endpoints"
        ],
        "summary": "Process for fetching dropdown for replacement",
        "description": "This API is used to fetch replacement dropdown fir a vehicle with walking customer id",
        "operationId": "replacementValidateAndDropDown",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "SSO token for authentication of valid user"
          }
        ],
        "requestBody": {
          "description": "Contains details of vehicle number for which dropdown needs to be fetched",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateReplacementRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Dropdown Response of Replacement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDropdownResponseV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/updateEfkonTagSecAmt": {
      "post": {
        "tags": [
          "Efkon Tag Deposit Update Resource"
        ],
        "summary": "Applicable Dropdown",
        "description": "Get applicable VC wise product",
        "operationId": "updateEfkonTagSecAmtFromFile",
        "parameters": [
          {
            "name": "file",
            "in": "query",
            "description": "Multipart File containing records for processing",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EfkonTagDepositUpdationRecord"
                }
              ]
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "UUID for authentication of valid user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EfkonTagDepositUpdationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cause": {
                      "type": "object",
                      "properties": {
                        "stackTrace": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "classLoaderName": {
                                "type": "string"
                              },
                              "moduleName": {
                                "type": "string"
                              },
                              "moduleVersion": {
                                "type": "string"
                              },
                              "methodName": {
                                "type": "string"
                              },
                              "fileName": {
                                "type": "string"
                              },
                              "lineNumber": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "nativeMethod": {
                                "type": "boolean"
                              },
                              "className": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "message": {
                          "type": "string"
                        },
                        "suppressed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "stackTrace": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "classLoaderName": {
                                      "type": "string"
                                    },
                                    "moduleName": {
                                      "type": "string"
                                    },
                                    "moduleVersion": {
                                      "type": "string"
                                    },
                                    "methodName": {
                                      "type": "string"
                                    },
                                    "fileName": {
                                      "type": "string"
                                    },
                                    "lineNumber": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "nativeMethod": {
                                      "type": "boolean"
                                    },
                                    "className": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "localizedMessage": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "localizedMessage": {
                          "type": "string"
                        }
                      }
                    },
                    "stackTrace": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "classLoaderName": {
                            "type": "string"
                          },
                          "moduleName": {
                            "type": "string"
                          },
                          "moduleVersion": {
                            "type": "string"
                          },
                          "methodName": {
                            "type": "string"
                          },
                          "fileName": {
                            "type": "string"
                          },
                          "lineNumber": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "nativeMethod": {
                            "type": "boolean"
                          },
                          "className": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "message": {
                      "type": "string"
                    },
                    "suppressed": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "stackTrace": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "classLoaderName": {
                                  "type": "string"
                                },
                                "moduleName": {
                                  "type": "string"
                                },
                                "moduleVersion": {
                                  "type": "string"
                                },
                                "methodName": {
                                  "type": "string"
                                },
                                "fileName": {
                                  "type": "string"
                                },
                                "lineNumber": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "nativeMethod": {
                                  "type": "boolean"
                                },
                                "className": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "message": {
                            "type": "string"
                          },
                          "localizedMessage": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "localizedMessage": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/tag/sub-wallet-replenish": {
      "post": {
        "tags": [
          "Tag Sub-Wallet Replenish"
        ],
        "summary": "Replenish FASTag Sub-Wallet & also refresh NPCI Mapper Status",
        "description": "This API is used to replenish FASTag Sub-Wallet & also refresh NPCI Mapper Status. It may take upto 30 Minutes for the action to be reflected at Toll Plazas",
        "operationId": "fastagSubWalletReplenish",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contains details of tag sequence number and vrn whose sub-wallet needs to be replenished",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/suspendToggle": {
      "post": {
        "tags": [
          "Tag Suspension Endpoints"
        ],
        "summary": "Process for suspend/unsuspend a tag at NPCI and Paytm",
        "description": "This API is used for suspend/unsuspend a tag based on action provided in request with tag Id of tag to be processed",
        "operationId": "suspendTag_1",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "SSO token for authentication of valid user"
          },
          {
            "name": "jwt-token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contains Toggle suspend/unsuspend action along with tag epcId and userId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagSuspendToggleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Response of Toggle Suspension/Unsuspension",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToggleSuspensionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/revoke/tag-closure/request": {
      "post": {
        "tags": [
          "Tag Closure Endpoints Resource"
        ],
        "summary": "Used to revoke a closure request",
        "description": "This api is used to revoke a tag closure request with specific reason for revoke",
        "operationId": "revokeTagClosureRequest",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains tsn and comment for revoke of closure request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeTagClosureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagClosureRevokeResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/oem/verifyOTP": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints for OEM Channel"
        ],
        "summary": "Verify OTP",
        "description": "Verify OTP.",
        "operationId": "verifyOtp_1",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          },
          {
            "name": "fetch_corporate",
            "in": "header",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "description": "Contains Otp to be verified for the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyOtpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/VerifyOtpResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/oem/verify/mobile-number": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints for OEM Channel"
        ],
        "summary": "Verify Mobile Number",
        "description": "API to verify Mobile Number for DIY OEM Issuance Flow",
        "operationId": "verifyMobileNumber",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains Mobile Number and transaction Id to be verified for the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyMobileNumberRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/VerifyMobileNumberResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/oem/v1/generateIssuanceReceipt": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints for OEM Channel"
        ],
        "summary": "Allows user to download issuance receipt for provided Tag Sequence number",
        "description": "This api is used to issuance receipt for a tag issued with provided TSN",
        "operationId": "generateIssuanceReceipt",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains tag for which receipt will be downloaded along with flags to send notification to customer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IssuanceReceiptRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/IssuanceReceiptResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/oem/updateTaf": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints for OEM Channel"
        ],
        "summary": "Update tag's TAF",
        "description": "Update tag's TAF while preserving the TAF rule",
        "operationId": "updateTaf",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains EPC Id and taf amount of tag to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TafUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success if no error encountered",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/oem/tagValidation": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints for OEM Channel"
        ],
        "summary": "Validate Tag at FIS and NPCI",
        "description": "This api will validate the tag at FIS, that is is saleable or not and validate at NPCI as well",
        "operationId": "performTagValidation",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains details of tag sequence number needs to be verified with NPCI",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateTagRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FixedTagCostResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/oem/send/notification": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints for OEM Channel"
        ],
        "summary": "Send SMS Notification",
        "description": "Send SMS Notification to OEM OCL Panel",
        "operationId": "sendNotificationOcl",
        "requestBody": {
          "description": "Contains user Id and template id of message to be sent to respective user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankSmsPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success if no error encountered",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/oem/issuanceForm": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints for OEM Channel"
        ],
        "summary": "Validate and Submit issuance form",
        "description": "Validate and Submit issuance form.",
        "operationId": "submitIssuanceForm_1",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains Oem Issuance request having details of tag to be issued",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OemIssuanceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success Response if no error encountered",
            "content": {
              "application/json": {

              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/oem/generateOTP": {
      "post": {
        "tags": [
          "Tag Issuance Endpoints for OEM Channel"
        ],
        "summary": "Generate OTP",
        "description": "Generate OTP.",
        "operationId": "generateOTP_1",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains Otp to be generated for the user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateOtpRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GenerateOtpResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/issuanceRetry": {
      "post": {
        "tags": [
          "Admin Controller Resource"
        ],
        "summary": "Process Pending Issuance Cron to retry processing stuck issuance",
        "description": "This api is used to retry issuance if tag is in some intermediate state",
        "operationId": "retryIssuance",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          },
          {
            "name": "jwt-token",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetryIssuanceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetryIssuanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/ecomTagClosure": {
      "post": {
        "tags": [
          "Tag Closure Endpoints Resource"
        ],
        "summary": "Used for closing a tag for ecommerce",
        "description": "This API is used for closing a tag issued via ecommerce channel",
        "operationId": "closeEcomCancelledOrderTags",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains EcomCancelledOrderCloseTagsRequest having details of order id and tsn",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EcomCancelledOrderCloseTagsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success Status if no error is encountered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EcomCancelledOrderCloseTagsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/downloadReport": {
      "post": {
        "tags": [
          "Tag Closure Endpoints Resource"
        ],
        "summary": "Used to download report for closed/initiated tags",
        "description": "This api is used to download report of tags which are initiated for closure or closed permanently",
        "operationId": "downloadReport",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "requestBody": {
          "description": "Contains tag closure report type and dates range for whcih report needs to be downloaded",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadTagClosureReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DownloadTagClosureReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/fastag/oem/pending-issuance/view-search": {
      "post": {
        "tags": [
          "Resource for Managing OEM Pending Issuance"
        ],
        "summary": "Allows user to search and view pending DIY OEM Issuances for the logged in user",
        "description": "This API is used to search and view pending DIY OEM Issuances for the logged in user",
        "operationId": "viewOemPendingIssuances",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset of response to be fetched",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit on no. of records in response to be fetched",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViewAndSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ListOemPendingIssuanceResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/markFailedStuckRmn": {
      "post": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to process stuck RMN and mark them as failed",
        "description": "This Api is used to process stuck RMN and mark them as failed",
        "operationId": "markFailedStuckRmn",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid for Cron",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request contains RMN ids of stucked RMN",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MarkFailedRmnRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v3/fastag/issuance/dropdownList": {
      "get": {
        "tags": [
          "Tag Issuance Endpoints for V3"
        ],
        "summary": "Provides dropdown values",
        "description": "Provides dropdown values for front end dropdown list.",
        "operationId": "listDropdown",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "columns",
            "in": "query",
            "description": "List of columns to be present in response",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sales_app",
            "in": "query",
            "description": "Sales app of Tags (non-mandatory)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Dropdown Response Dto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDropdownResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/fastag/issuance/dropdownList": {
      "get": {
        "tags": [
          "Tag Issuance Endpoints for Ecommerce"
        ],
        "summary": "Provides dropdown values",
        "description": "Provides dropdown values for front end dropdown list.",
        "operationId": "listDropdown_1",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "columns",
            "in": "query",
            "description": "List of columns to be present in response",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sales_app",
            "in": "query",
            "description": "Sales app of Tags (non-mandatory)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role_type",
            "in": "query",
            "description": "Sales app of Tags (non-mandatory)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "bank_type",
            "in": "query",
            "description": "Sales app of Tags (non-mandatory)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Dropdown Response Dto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDropdownResponseV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/tag/exist": {
      "get": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Verify tag documents existence",
        "description": "This api is used to verify whether tag documents are updated or not",
        "operationId": "isDocumentExist",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          },
          {
            "name": "orderId",
            "in": "header",
            "description": "orderId of Tag",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sso_token",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SaveUserTncResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/makeModelList": {
      "get": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Get Make Model List",
        "description": "This API will be used to fetch a list containing all make and their respective models",
        "operationId": "getMakeModelList",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMakeModelListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/fetchTnc": {
      "get": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Give Tnc Url",
        "description": "Give Tnc Url",
        "operationId": "getTnc",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTncResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fastag/issuance/dropdownList": {
      "get": {
        "tags": [
          "Tag Issuance Endpoints"
        ],
        "summary": "Provides dropdown values",
        "description": "Provides dropdown values for front end dropdown list.",
        "operationId": "listDropdown_2",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "columns",
            "in": "query",
            "description": "List of columns to be present in response",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sales_app",
            "in": "query",
            "description": "Sales app of Tags (non-mandatory)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Dropdown Response Dto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDropdownResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "HealthEndpoints"
        ],
        "summary": "Ping endpoint",
        "description": "Ping endpoint",
        "operationId": "getPing",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PingResponse"
                    }
                  ]
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "cause": {
                          "type": "object",
                          "properties": {
                            "stackTrace": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "classLoaderName": {
                                    "type": "string"
                                  },
                                  "moduleName": {
                                    "type": "string"
                                  },
                                  "moduleVersion": {
                                    "type": "string"
                                  },
                                  "methodName": {
                                    "type": "string"
                                  },
                                  "fileName": {
                                    "type": "string"
                                  },
                                  "lineNumber": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "nativeMethod": {
                                    "type": "boolean"
                                  },
                                  "className": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "message": {
                              "type": "string"
                            },
                            "suppressed": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "stackTrace": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "classLoaderName": {
                                          "type": "string"
                                        },
                                        "moduleName": {
                                          "type": "string"
                                        },
                                        "moduleVersion": {
                                          "type": "string"
                                        },
                                        "methodName": {
                                          "type": "string"
                                        },
                                        "fileName": {
                                          "type": "string"
                                        },
                                        "lineNumber": {
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "nativeMethod": {
                                          "type": "boolean"
                                        },
                                        "className": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "message": {
                                    "type": "string"
                                  },
                                  "localizedMessage": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "localizedMessage": {
                              "type": "string"
                            }
                          }
                        },
                        "stackTrace": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "classLoaderName": {
                                "type": "string"
                              },
                              "moduleName": {
                                "type": "string"
                              },
                              "moduleVersion": {
                                "type": "string"
                              },
                              "methodName": {
                                "type": "string"
                              },
                              "fileName": {
                                "type": "string"
                              },
                              "lineNumber": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "nativeMethod": {
                                "type": "boolean"
                              },
                              "className": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "message": {
                          "type": "string"
                        },
                        "suppressed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "stackTrace": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "classLoaderName": {
                                      "type": "string"
                                    },
                                    "moduleName": {
                                      "type": "string"
                                    },
                                    "moduleVersion": {
                                      "type": "string"
                                    },
                                    "methodName": {
                                      "type": "string"
                                    },
                                    "fileName": {
                                      "type": "string"
                                    },
                                    "lineNumber": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "nativeMethod": {
                                      "type": "boolean"
                                    },
                                    "className": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "localizedMessage": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "localizedMessage": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/issuance/health": {
      "get": {
        "tags": [
          "HealthEndpoints"
        ],
        "summary": "Health endpoint",
        "description": "Health endpoint",
        "operationId": "getIssuanceHealth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/HealthResponse"
                    }
                  ]
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "cause": {
                          "type": "object",
                          "properties": {
                            "stackTrace": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "classLoaderName": {
                                    "type": "string"
                                  },
                                  "moduleName": {
                                    "type": "string"
                                  },
                                  "moduleVersion": {
                                    "type": "string"
                                  },
                                  "methodName": {
                                    "type": "string"
                                  },
                                  "fileName": {
                                    "type": "string"
                                  },
                                  "lineNumber": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "nativeMethod": {
                                    "type": "boolean"
                                  },
                                  "className": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "message": {
                              "type": "string"
                            },
                            "suppressed": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "stackTrace": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "classLoaderName": {
                                          "type": "string"
                                        },
                                        "moduleName": {
                                          "type": "string"
                                        },
                                        "moduleVersion": {
                                          "type": "string"
                                        },
                                        "methodName": {
                                          "type": "string"
                                        },
                                        "fileName": {
                                          "type": "string"
                                        },
                                        "lineNumber": {
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "nativeMethod": {
                                          "type": "boolean"
                                        },
                                        "className": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "message": {
                                    "type": "string"
                                  },
                                  "localizedMessage": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "localizedMessage": {
                              "type": "string"
                            }
                          }
                        },
                        "stackTrace": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "classLoaderName": {
                                "type": "string"
                              },
                              "moduleName": {
                                "type": "string"
                              },
                              "moduleVersion": {
                                "type": "string"
                              },
                              "methodName": {
                                "type": "string"
                              },
                              "fileName": {
                                "type": "string"
                              },
                              "lineNumber": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "nativeMethod": {
                                "type": "boolean"
                              },
                              "className": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "message": {
                          "type": "string"
                        },
                        "suppressed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "stackTrace": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "classLoaderName": {
                                      "type": "string"
                                    },
                                    "moduleName": {
                                      "type": "string"
                                    },
                                    "moduleVersion": {
                                      "type": "string"
                                    },
                                    "methodName": {
                                      "type": "string"
                                    },
                                    "fileName": {
                                      "type": "string"
                                    },
                                    "lineNumber": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "nativeMethod": {
                                      "type": "boolean"
                                    },
                                    "className": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "localizedMessage": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "localizedMessage": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "HealthEndpoints"
        ],
        "summary": "Health endpoint",
        "description": "Health endpoint",
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/HealthResponse"
                    }
                  ]
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "cause": {
                          "type": "object",
                          "properties": {
                            "stackTrace": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "classLoaderName": {
                                    "type": "string"
                                  },
                                  "moduleName": {
                                    "type": "string"
                                  },
                                  "moduleVersion": {
                                    "type": "string"
                                  },
                                  "methodName": {
                                    "type": "string"
                                  },
                                  "fileName": {
                                    "type": "string"
                                  },
                                  "lineNumber": {
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "nativeMethod": {
                                    "type": "boolean"
                                  },
                                  "className": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "message": {
                              "type": "string"
                            },
                            "suppressed": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "stackTrace": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "classLoaderName": {
                                          "type": "string"
                                        },
                                        "moduleName": {
                                          "type": "string"
                                        },
                                        "moduleVersion": {
                                          "type": "string"
                                        },
                                        "methodName": {
                                          "type": "string"
                                        },
                                        "fileName": {
                                          "type": "string"
                                        },
                                        "lineNumber": {
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "nativeMethod": {
                                          "type": "boolean"
                                        },
                                        "className": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "message": {
                                    "type": "string"
                                  },
                                  "localizedMessage": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "localizedMessage": {
                              "type": "string"
                            }
                          }
                        },
                        "stackTrace": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "classLoaderName": {
                                "type": "string"
                              },
                              "moduleName": {
                                "type": "string"
                              },
                              "moduleVersion": {
                                "type": "string"
                              },
                              "methodName": {
                                "type": "string"
                              },
                              "fileName": {
                                "type": "string"
                              },
                              "lineNumber": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "nativeMethod": {
                                "type": "boolean"
                              },
                              "className": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "message": {
                          "type": "string"
                        },
                        "suppressed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "stackTrace": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "classLoaderName": {
                                      "type": "string"
                                    },
                                    "moduleName": {
                                      "type": "string"
                                    },
                                    "moduleVersion": {
                                      "type": "string"
                                    },
                                    "methodName": {
                                      "type": "string"
                                    },
                                    "fileName": {
                                      "type": "string"
                                    },
                                    "lineNumber": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "nativeMethod": {
                                      "type": "boolean"
                                    },
                                    "className": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "localizedMessage": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "localizedMessage": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/fastag/oem/pending-issuance/get/oem-branch/details": {
      "get": {
        "tags": [
          "Resource for Managing OEM Pending Issuance"
        ],
        "summary": "Allows user to fetch OEM or Branch name from dashboard as user management related classes are not natively imported in dashboard module, where the details are required",
        "description": "This API is used to fetch OEM or Branch name from dashboard as user management related classes are not natively imported in dashboard module, where the details are required",
        "operationId": "getOemBranchDetails",
        "parameters": [
          {
            "name": "jwt-token",
            "in": "header",
            "description": "jwt token produced for this user id.",
            "required": true
          },
          {
            "name": "userId",
            "in": "header",
            "description": "user id for jwt token validation",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "client id for token validation",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v2/fastag/issuance/oem/dropdownList": {
      "get": {
        "tags": [
          "Tag Issuance Endpoints for OEM Channel via dashboard"
        ],
        "summary": "Provides dropdown values",
        "description": "Provides dropdown values for front end dropdown list.",
        "operationId": "listDropdownV2",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          },
          {
            "name": "tsn",
            "in": "query",
            "description": "TSN of tag",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Dropdown Response Dto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDropdownResponseV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/tag": {
      "get": {
        "tags": [
          "Tag Closure Endpoints Resource"
        ],
        "summary": "Used to validate whether tag is eligible for closure or not",
        "description": "This api is used to verify whether provided tag can be closed or not",
        "operationId": "getTagForClosure",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          },
          {
            "name": "tsn",
            "in": "query",
            "description": "TSN of tag to be validated",
            "required": true,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/GetTagForClosureResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/oem/getOemDetails": {
      "get": {
        "tags": [
          "Tag Issuance Endpoints for OEM Channel"
        ],
        "operationId": "getOemDetailsResponse",
        "parameters": [
          {
            "name": "customer_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseOemDetailsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/oem/dropdownList": {
      "get": {
        "tags": [
          "Tag Issuance Endpoints for OEM Channel"
        ],
        "summary": "Provides dropdown values",
        "description": "Provides dropdown values for front end dropdown list.",
        "operationId": "listDropdown_3",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of Dropdown Response Dto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDropdownResponseV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/oem/downloadChallan": {
      "get": {
        "tags": [
          "Tag Issuance Endpoints for OEM Channel"
        ],
        "summary": "Download Challan",
        "description": "API to download challan for OEM",
        "operationId": "downloadChallan",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          },
          {
            "name": "tag_id",
            "in": "query",
            "description": "Tag Id of tag for which challan to be downloaded",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/dropdownList/corporate": {
      "get": {
        "tags": [
          "Corporate Issuance Dropdown Resource"
        ],
        "summary": "Provides dropdown values",
        "description": "Provides dropdown values for front end dropdown list.",
        "operationId": "listDropdown_4",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDropdownResponseV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/closeableTags": {
      "get": {
        "tags": [
          "Tag Closure Endpoints Resource"
        ],
        "summary": "Used to fetch list of all eligible tag for closure",
        "description": "This api is used to fetch list of all eligible tag for closure",
        "operationId": "getCloseableTags",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          },
          {
            "name": "request",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/GetCloseableTagRequest"
            }
          }
        ],
        "requestBody": {
          "description": "Contains details of offset and limit to fetch tags list",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCloseableTagRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCloseableTagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/v1/fastag/issuance/challan/download": {
      "get": {
        "tags": [
          "Admin Controller Resource"
        ],
        "summary": "Allows user to download challan for provided Tag Sequence number",
        "description": "This api is used to download challan for a tag issued with provided TSN",
        "operationId": "downloadChallan_1",
        "parameters": [
          {
            "name": "tsn",
            "in": "query",
            "description": "Tag Sequence Number for downloading Challan",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "jwt-token",
            "in": "header",
            "description": "JWT Token for validating user",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clientId",
            "in": "header",
            "description": "Client id of user",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/fastag/oem/pending-issuance/send/notification": {
      "get": {
        "tags": [
          "Resource for Managing OEM Pending Issuance"
        ],
        "summary": "Allows user to resend the notification to customer",
        "description": "This API is used to resend the notification to customer",
        "operationId": "sendNotificationToCustomer",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          },
          {
            "name": "tagSequenceNumber",
            "in": "query",
            "description": "Tag Sequence Number to be cancelled issuance for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ext/fastag/oem/pending-issuance/cancel": {
      "get": {
        "tags": [
          "Resource for Managing OEM Pending Issuance"
        ],
        "summary": "Allows user to cancel a current pending DIY OEM Issuance Request",
        "description": "This API is used to cancel a current pending DIY OEM Issuance Request",
        "operationId": "cancelDIYIssuanceLink",
        "parameters": [
          {
            "name": "sso-token",
            "in": "header",
            "description": "sso-token to be validated before execution",
            "required": true
          },
          {
            "name": "tagSequenceNumber",
            "in": "query",
            "description": "Tag Sequence Number to be cancelled issuance for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/walletAddFundRetry": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to retry Add Funds to Wallet",
        "description": "This Api is used to retry add funds to wallet for tags unprocessed for funds addition ",
        "operationId": "addFundRetry",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/vehicleGrouping/addCycles": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to process tags for adding cycles in vehicle grouping",
        "description": "This Api is used to process tags for adding cycles in vehicle grouping",
        "operationId": "addCycles",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid for Cron",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backOffsetInDays",
            "in": "query",
            "description": "backOffsetInDays for Cron",
            "required": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "forwardOffsetInDays",
            "in": "query",
            "description": "forwardOffsetInDays for Cron",
            "required": true,
            "schema": {
              "maximum": 365,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/userTagStateRecon": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to process recon for user tags",
        "description": "This Api is used to process recon for user tags",
        "operationId": "userTagStateRecon",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid for Cron",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "noOfThreads",
            "in": "query",
            "description": "No. of threads",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/upiHandleRetry": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to process retry creating upi handle",
        "description": "This Api is used to process retry for creating upi handle",
        "operationId": "upiHandleRetry",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid for Cron",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/unblock": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Inventory unblock api",
        "description": "This will be hit from some external cron which will trigger the inventory unblock.",
        "operationId": "unblockInventory",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/sdRefundRetry": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to process retry for security deposit refund",
        "description": "This Api is used to process retry for security deposit refund",
        "operationId": "retrySdRefund",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid for Cron",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/migrateOldTags/V2": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to process for updating old Replaced/Closed Tags",
        "description": "This Api is used for updating old Replaced/Closed Tags",
        "operationId": "updateOldReplacedTags",
        "parameters": [
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid for Cron",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/initialTopUpRetry": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to process retry for Initial top-up for provided TSN",
        "description": "This Api is used to process retry for Initial top-up for provided TSN",
        "operationId": "retryInitialTopUp",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid for Cron",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tsn",
            "in": "query",
            "description": "Tag Seq Number for Retry",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/ecommOrderRetry": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to process failed ecommerce orders",
        "description": "This Api is used to process failed ecommerce orders",
        "operationId": "ecommOrderRetry",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid for Cron",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "description": "No. of days to validate retry",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/ecommFailedOrderRecon": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to process recon for failed ecommerce orders",
        "description": "This Api is used to process recon for failed ecommerce orders",
        "operationId": "ecommFailedOrderRecon",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid for Cron",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderId",
            "in": "query",
            "description": "Order Id of Ecommerce Order",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/diyRmnExpiry": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to process expired for rmn for not accepted by user",
        "description": "This Api is used to process expired for rmn for not accepted by user",
        "operationId": "diyRmnExpiry",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid for Cron",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/customer/corporateToRetail": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to process converting Customer wallet type back from Corporate to Retail",
        "description": "This Api is used to process converting Customer wallet type back from Corporate to Retail",
        "operationId": "retryCustomerCorporateToRetail",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid for Cron",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerIdList",
            "in": "query",
            "description": "List of customer Id to transfer",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/corporate/verification-overdue": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to process tags for marking corporate tags as verification overdue",
        "description": "This Api is used to process tags for marking corporate tags as verification overdue",
        "operationId": "markCorporateTagStatusVerificationOverdue",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid for Cron",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/corporate/issuance": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to process retry for issuance belongs to Corporate",
        "description": "This Api is used to process retry for issuance belongs to Corporate",
        "operationId": "retryCorporateIssuance",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid for Cron",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cron/bulkRmnRetry": {
      "get": {
        "tags": [
          "Cron Resource"
        ],
        "summary": "Cron to process retry for rmn for failed rmn updates",
        "description": "This Api is used to process retry for rmn for failed rmn updates",
        "operationId": "rmnRetry",
        "parameters": [
          {
            "name": "triggerLogId",
            "in": "header",
            "description": "Trigger Log Id",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "uuid for Cron",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateGroupRequest": {
        "required": [
          "is_recurring",
          "limit_type",
          "limit_value",
          "name",
          "time_period_type",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "limit_type": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          "is_recurring": {
            "type": "boolean"
          },
          "limit_value": {
            "type": "number",
            "format": "double"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "time_period_type": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ]
          }
        }
      },
      "CreateGroupResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "limit_type": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          "is_recurring": {
            "type": "boolean"
          },
          "limit_value": {
            "type": "number",
            "format": "double"
          },
          "start_date": {
            "type": "string",
            "format": "date-time"
          },
          "end_date": {
            "type": "string",
            "format": "date-time"
          },
          "time_period_type": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2",
              "3"
            ]
          }
        }
      },
      "BaseResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "response": {
            "type": "object"
          },
          "statusCode": {
            "type": "string"
          }
        }
      },
      "ChangeStatusRequest": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "0",
              "1",
              "2"
            ]
          }
        }
      },
      "ChangeStatusResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string"
          },
          "msg": {
            "type": "string"
          }
        }
      },
      "AddRemoveVehicleInGroupRequest": {
        "type": "object",
        "properties": {
          "group_id": {
            "type": "integer",
            "format": "int64"
          },
          "tags_to_add": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "tags_to_remove": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "AddRemoveVehicleInGroupResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorInfo"
          },
          "msg": {
            "type": "string"
          }
        }
      },
      "ErrorInfo": {
        "type": "object",
        "properties": {
          "errorMessageCode": {
            "type": "string"
          }
        }
      },
      "SaveUserTncRequest": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "tnCList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tnc"
            }
          }
        }
      },
      "Tnc": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "accept": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SaveUserTncResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "responseCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "tnCAcceptList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TncAcceptDetails"
            }
          }
        }
      },
      "TncAcceptDetails": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "userTncAcceptId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ManageExceptionTagRequest": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "tag_operation": {
            "type": "string",
            "enum": [
              "ADD",
              "REMOVE",
              "UPDATE"
            ]
          },
          "exception_code": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7"
            ]
          }
        }
      },
      "ManageTagEntryRequest": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "key": {
            "type": "string",
            "enum": [
              "MVC",
              "VRN",
              "COMMERCIAL",
              "VIN"
            ]
          },
          "value": {
            "type": "string"
          }
        }
      },
      "RespMngTagEntries": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "txn_id": {
            "type": "string"
          },
          "resp_code": {
            "type": "string"
          },
          "total_request_count": {
            "type": "integer",
            "format": "int32"
          },
          "success_request_count": {
            "type": "integer",
            "format": "int32"
          },
          "tag_entry_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TagEntry"
            }
          }
        }
      },
      "TagEntry": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string"
          },
          "tag_id": {
            "type": "string"
          },
          "result": {
            "type": "string"
          },
          "err_code": {
            "type": "string"
          },
          "err_code_mapping": {
            "type": "string"
          }
        }
      },
      "CorporateEditRequest": {
        "required": [
          "corporateId",
          "corporateName"
        ],
        "type": "object",
        "properties": {
          "corporateName": {
            "type": "string"
          },
          "corporateId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RemoveSoftBlockRequest": {
        "required": [
          "tsn"
        ],
        "type": "object",
        "properties": {
          "tsn": {
            "minimum": 0,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RemoveSoftBlockResponse": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "InitiateTagClosureRequest": {
        "required": [
          "comment"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "InitiateTagClosureResponse": {
        "type": "object",
        "properties": {
          "initiated": {
            "type": "boolean"
          },
          "error_message": {
            "type": "string"
          }
        }
      },
      "ForceClosureTagRequest": {
        "required": [
          "comment"
        ],
        "type": "object",
        "properties": {
          "comment": {
            "maxLength": 256,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "ForceCloseTagResponse": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean"
          },
          "error_message": {
            "type": "string"
          }
        }
      },
      "CloseTagsRequest": {
        "required": [
          "tsn_list"
        ],
        "type": "object",
        "properties": {
          "tsn_list": {
            "maxItems": 20,
            "minItems": 0,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "CloseTagsResponse": {
        "type": "object",
        "properties": {
          "close_tags_response_data_list": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloseTagsResponseData"
            }
          }
        }
      },
      "CloseTagsResponseData": {
        "type": "object",
        "properties": {
          "tsn": {
            "type": "integer",
            "format": "int64"
          },
          "error_message": {
            "type": "string"
          },
          "wallet_txn_id": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "PermanentCloseEligibleTagsResponse": {
        "type": "object",
        "properties": {
          "error_message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "PlacedOrderNotificationRequestBody": {
        "required": [
          "customer_id",
          "item_id",
          "order_id",
          "vrn"
        ],
        "type": "object",
        "properties": {
          "notifyRequestType": {
            "type": "string",
            "enum": [
              "ECOMMERCE"
            ]
          },
          "order_id": {
            "type": "integer",
            "format": "int64"
          },
          "item_id": {
            "type": "integer",
            "format": "int64"
          },
          "vrn": {
            "type": "string"
          },
          "customer_id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ValidateProcessOrderResponse": {
        "type": "object",
        "properties": {
          "failureReason": {
            "type": "object"
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "httpStatus": {
            "type": "string",
            "enum": [
              "100 CONTINUE",
              "101 SWITCHING_PROTOCOLS",
              "102 PROCESSING",
              "103 CHECKPOINT",
              "200 OK",
              "201 CREATED",
              "202 ACCEPTED",
              "203 NON_AUTHORITATIVE_INFORMATION",
              "204 NO_CONTENT",
              "205 RESET_CONTENT",
              "206 PARTIAL_CONTENT",
              "207 MULTI_STATUS",
              "208 ALREADY_REPORTED",
              "226 IM_USED",
              "300 MULTIPLE_CHOICES",
              "301 MOVED_PERMANENTLY",
              "302 FOUND",
              "302 MOVED_TEMPORARILY",
              "303 SEE_OTHER",
              "304 NOT_MODIFIED",
              "305 USE_PROXY",
              "307 TEMPORARY_REDIRECT",
              "308 PERMANENT_REDIRECT",
              "400 BAD_REQUEST",
              "401 UNAUTHORIZED",
              "402 PAYMENT_REQUIRED",
              "403 FORBIDDEN",
              "404 NOT_FOUND",
              "405 METHOD_NOT_ALLOWED",
              "406 NOT_ACCEPTABLE",
              "407 PROXY_AUTHENTICATION_REQUIRED",
              "408 REQUEST_TIMEOUT",
              "409 CONFLICT",
              "410 GONE",
              "411 LENGTH_REQUIRED",
              "412 PRECONDITION_FAILED",
              "413 PAYLOAD_TOO_LARGE",
              "413 REQUEST_ENTITY_TOO_LARGE",
              "414 URI_TOO_LONG",
              "414 REQUEST_URI_TOO_LONG",
              "415 UNSUPPORTED_MEDIA_TYPE",
              "416 REQUESTED_RANGE_NOT_SATISFIABLE",
              "417 EXPECTATION_FAILED",
              "418 I_AM_A_TEAPOT",
              "419 INSUFFICIENT_SPACE_ON_RESOURCE",
              "420 METHOD_FAILURE",
              "421 DESTINATION_LOCKED",
              "422 UNPROCESSABLE_ENTITY",
              "423 LOCKED",
              "424 FAILED_DEPENDENCY",
              "425 TOO_EARLY",
              "426 UPGRADE_REQUIRED",
              "428 PRECONDITION_REQUIRED",
              "429 TOO_MANY_REQUESTS",
              "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
              "451 UNAVAILABLE_FOR_LEGAL_REASONS",
              "500 INTERNAL_SERVER_ERROR",
              "501 NOT_IMPLEMENTED",
              "502 BAD_GATEWAY",
              "503 SERVICE_UNAVAILABLE",
              "504 GATEWAY_TIMEOUT",
              "505 HTTP_VERSION_NOT_SUPPORTED",
              "506 VARIANT_ALSO_NEGOTIATES",
              "507 INSUFFICIENT_STORAGE",
              "508 LOOP_DETECTED",
              "509 BANDWIDTH_LIMIT_EXCEEDED",
              "510 NOT_EXTENDED",
              "511 NETWORK_AUTHENTICATION_REQUIRED"
            ]
          },
          "status": {
            "type": "string"
          }
        }
      },
      "FulfillmentInfoRequestV2": {
        "required": [
          "customer_id",
          "is_cst_order",
          "is_replacement",
          "item_id",
          "order_id",
          "tsn",
          "vrn"
        ],
        "type": "object",
        "properties": {
          "order_id": {
            "type": "integer",
            "format": "int64"
          },
          "item_id": {
            "type": "integer",
            "format": "int64"
          },
          "tsn": {
            "type": "string"
          },
          "product_id": {
            "type": "string"
          },
          "customer_id": {
            "type": "integer",
            "format": "int64"
          },
          "vrn": {
            "type": "string"
          },
          "is_cst_order": {
            "type": "boolean"
          },
          "vehicle_class": {
            "type": "string",
            "enum": [
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "20"
            ]
          },
          "is_replacement": {
            "type": "boolean"
          },
          "rc_front_id": {
            "type": "string"
          },
          "rc_back_id": {
            "type": "string"
          }
        }
      },
      "FulfillmentInfoResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "action": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "tagSequenceNumber": {
            "type": "integer",
            "format": "int64"
          },
          "epcId": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "assignedTo": {
            "type": "integer",
            "format": "int64"
          },
          "inventoryStatus": {
            "type": "string",
            "enum": [
              "MIGRATION_FAILED",
              "ORDERED",
              "NON_STOCKED_IN",
              "ACCEPTED",
              "BLOCKED",
              "ISSUED"
            ]
          },
          "issuanceStatus": {
            "type": "string",
            "enum": [
              "PAYMENT_PENDING",
              "PAYMENT_FAILED",
              "PAYMENT_SUCCESS",
              "NPCI_ADD_SUCCESS",
              "WALLET_CREATED",
              "ISSUED_WITH_LOW_BALANCE",
              "SUSPEND",
              "ACTIVE",
              "USER_SUSPENDED",
              "CLOSED",
              "REPLACED",
              "CLOSURE_INITIATED",
              "PANEL_SUSPENDED"
            ]
          },
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "vehicleClass": {
            "type": "string",
            "enum": [
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "20"
            ]
          },
          "vehicleType": {
            "type": "string",
            "enum": [
              "1",
              "0"
            ]
          },
          "vehicleId": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "leadId": {
            "type": "string"
          },
          "vehicleNumber": {
            "type": "string"
          },
          "distributionChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "issueDate": {
            "type": "string",
            "format": "date-time"
          },
          "tagNpciStateActive": {
            "type": "boolean"
          },
          "tagNpciStateBlacklist": {
            "type": "boolean"
          },
          "tagNpciStateExempt": {
            "type": "boolean"
          },
          "tagNpciStateLowBalance": {
            "type": "boolean"
          },
          "tagNpciStateGovtBlacklist": {
            "type": "boolean"
          },
          "tagNpciStateInvalidCarriage": {
            "type": "boolean"
          },
          "tagNpciStateClosedReplaced": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "assignedFrom": {
            "type": "integer",
            "format": "int64"
          },
          "batchId": {
            "type": "integer",
            "format": "int64"
          },
          "sequenceNumber": {
            "type": "integer",
            "format": "int64"
          },
          "npciStateUpdateTime": {
            "type": "string",
            "format": "date-time"
          },
          "encryptedCustomerId": {
            "type": "string"
          },
          "tvc": {
            "type": "string",
            "enum": [
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "20"
            ]
          },
          "tagMetaInfo": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "email": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "leadStatus": {
            "type": "string",
            "enum": [
              "NEW",
              "LEAD_CREATED",
              "QC_SUCCESS",
              "QC_FAILED",
              "VERIFICATION_OVERDUE"
            ]
          },
          "isCorporate": {
            "type": "boolean"
          },
          "issuanceSource": {
            "type": "string",
            "enum": [
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "7",
              "8"
            ]
          },
          "upiHandle": {
            "type": "string"
          },
          "initAt": {
            "type": "string",
            "format": "date-time"
          },
          "tagStateHistoryMetaData": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "tid": {
            "type": "string"
          },
          "issuanceStatusBeforeInitiateClosureCode": {
            "type": "integer",
            "format": "int32"
          },
          "issuanceStatusBeforeInitiateClosure": {
            "type": "string",
            "enum": [
              "PAYMENT_PENDING",
              "PAYMENT_FAILED",
              "PAYMENT_SUCCESS",
              "NPCI_ADD_SUCCESS",
              "WALLET_CREATED",
              "ISSUED_WITH_LOW_BALANCE",
              "SUSPEND",
              "ACTIVE",
              "USER_SUSPENDED",
              "CLOSED",
              "REPLACED",
              "CLOSURE_INITIATED",
              "PANEL_SUSPENDED"
            ]
          }
        }
      },
      "ThirdPartyFulfillmentInfoRequest": {
        "required": [
          "customer_id",
          "tsn"
        ],
        "type": "object",
        "properties": {
          "tag": {
            "$ref": "#/components/schemas/Tag"
          },
          "order_id": {
            "type": "string"
          },
          "tsn": {
            "type": "string"
          },
          "vrn": {
            "type": "string"
          },
          "vin": {
            "type": "string"
          },
          "rc_front_id": {
            "type": "string"
          },
          "rc_back_id": {
            "type": "string"
          },
          "sale_certificate_id": {
            "type": "string"
          },
          "insurance_copy_id": {
            "type": "string"
          },
          "customer_id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CartItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "sku": {
            "type": "string"
          },
          "product_id": {
            "type": "integer",
            "format": "int64"
          },
          "item_id": {
            "type": "string"
          },
          "meta_data": {
            "$ref": "#/components/schemas/Metadata"
          }
        }
      },
      "CustomerInfo": {
        "type": "object",
        "properties": {
          "imei": {
            "type": "string"
          },
          "device_id": {
            "type": "string"
          },
          "os_version": {
            "type": "string"
          },
          "remote_ip": {
            "type": "string"
          },
          "remote_ua": {
            "type": "string"
          }
        }
      },
      "Metadata": {
        "type": "object",
        "properties": {
          "vehicle_registrtion_number": {
            "type": "string"
          },
          "vehicle_class": {
            "type": "string"
          },
          "is_replacement": {
            "type": "boolean"
          }
        }
      },
      "PreValidateOrderRequest": {
        "type": "object",
        "properties": {
          "cart_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          },
          "req_id": {
            "type": "string"
          },
          "customer_id": {
            "type": "integer",
            "format": "int64"
          },
          "customer_info": {
            "$ref": "#/components/schemas/CustomerInfo"
          }
        }
      },
      "PreValidateOrderResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "cart_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItem"
            }
          },
          "req_id": {
            "type": "string"
          },
          "customer_info": {
            "$ref": "#/components/schemas/CustomerInfo"
          },
          "error_title": {
            "type": "string"
          },
          "error_info": {
            "$ref": "#/components/schemas/ErrorInfo"
          }
        }
      },
      "ValidateVehicleNoRequest": {
        "required": [
          "vehicleNo"
        ],
        "type": "object",
        "properties": {
          "vehicleNo": {
            "type": "string",
            "example": "HR26Y5383"
          }
        }
      },
      "ValidateTagRequestV2": {
        "required": [
          "tagSeqNum"
        ],
        "type": "object",
        "properties": {
          "tagSeqNum": {
            "type": "integer",
            "format": "int64",
            "example": 50001000
          }
        }
      },
      "ValidateTagResponse": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "leadId": {
            "type": "string"
          },
          "vehicleNo": {
            "type": "string"
          },
          "vehicleId": {
            "type": "string"
          },
          "tagSoftBlocked": {
            "type": "boolean"
          }
        }
      },
      "ValidateVRNIssuanceRequest": {
        "required": [
          "vehicleNo"
        ],
        "type": "object",
        "properties": {
          "vehicleNo": {
            "type": "string",
            "example": "HR26Y5383"
          }
        }
      },
      "ValidateVRNIssuanceResponse": {
        "type": "object",
        "properties": {
          "issuanceType": {
            "type": "string"
          },
          "vehicleIssuanceType": {
            "type": "integer",
            "format": "int32"
          },
          "vehicleClass": {
            "type": "string",
            "enum": [
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "20"
            ]
          }
        }
      },
      "ValidateEPCIdRequest": {
        "required": [
          "epcId",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "epcId": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "ValidateEPCIdResponse": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          }
        }
      },
      "AgentData": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "custId": {
            "type": "string"
          }
        }
      },
      "ImageData": {
        "type": "object",
        "properties": {
          "dmsId": {
            "type": "string"
          },
          "docType": {
            "type": "string"
          },
          "docProvided": {
            "type": "string"
          },
          "rejectionReason": {
            "type": "string"
          },
          "docDeleted": {
            "type": "boolean"
          }
        }
      },
      "UpdateLeadStatusRequest": {
        "required": [
          "leadId",
          "leadStatus"
        ],
        "type": "object",
        "properties": {
          "leadId": {
            "type": "string",
            "example": "7f56c350-917d-43a3-8186-6a5a8f48f08d"
          },
          "leadStatus": {
            "type": "string",
            "example": "0",
            "enum": [
              "0",
              "1",
              "2",
              "3",
              "4"
            ]
          },
          "bankTransactionId": {
            "type": "string"
          },
          "approvalTime": {
            "type": "integer",
            "format": "int64"
          },
          "imageData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageData"
            }
          },
          "agentData": {
            "$ref": "#/components/schemas/AgentData"
          },
          "internalOrderId": {
            "type": "integer",
            "format": "int64"
          },
          "approvalReason": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tafAmount": {
            "type": "number",
            "format": "double"
          },
          "transactionId": {
            "type": "string"
          }
        }
      },
      "TagStatusRequest": {
        "type": "object",
        "properties": {
          "vrn": {
            "type": "string"
          },
          "tsn": {
            "type": "string"
          }
        }
      },
      "TagStatusResponse": {
        "type": "object",
        "properties": {
          "tsn": {
            "type": "string"
          },
          "vrn": {
            "type": "string"
          },
          "paytm_status": {
            "type": "string"
          },
          "npci_status": {
            "type": "string"
          },
          "override_action": {
            "type": "boolean"
          },
          "to_do_action": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "type": "string"
          }
        }
      },
      "VinToVrnRequest": {
        "required": [
          "action_type",
          "back_rc_id",
          "front_rc_id",
          "tag_sequence_number",
          "vehicle_registration_number"
        ],
        "type": "object",
        "properties": {
          "tag_sequence_number": {
            "type": "string"
          },
          "vehicle_registration_number": {
            "type": "string"
          },
          "back_rc_id": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "front_rc_id": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "action_type": {
            "type": "string",
            "enum": [
              "ACTIVATION",
              "REUPLOAD",
              "VIN_TO_VRN",
              "RMN_UPDATE",
              "DOWNLOAD_CHALLAN",
              "VRN_UPDATE"
            ]
          }
        }
      },
      "TagDocumentUpdateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "TagDocumentUpdateRequest": {
        "required": [
          "back_rc_id",
          "front_rc_id",
          "order_id",
          "tag_sequence_number",
          "vehicle_registrtion_number"
        ],
        "type": "object",
        "properties": {
          "order_id": {
            "type": "integer",
            "format": "int64"
          },
          "tag_sequence_number": {
            "type": "string"
          },
          "vehicle_registrtion_number": {
            "type": "string"
          },
          "back_rc_id": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "front_rc_id": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "RmnTransferRequest": {
        "required": [
          "back_rc_id",
          "front_rc_id",
          "rmn_id",
          "tag_sequence_number",
          "vehicle_registration_number"
        ],
        "type": "object",
        "properties": {
          "tag_sequence_number": {
            "type": "integer",
            "format": "int64"
          },
          "vehicle_registration_number": {
            "type": "string"
          },
          "back_rc_id": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "front_rc_id": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "rmn_id": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RmnTransferResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ActivationRequest": {
        "required": [
          "action_type",
          "back_rc_id",
          "front_rc_id",
          "tag_sequence_number",
          "vehicle_registration_number"
        ],
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "enum": [
              "HISTORIC_LEAD",
              "BULK_DOCUMENT_UPLOAD_LEAD",
              "SINGLE_DOCUMENT_UPLOAD_LEAD",
              "DISPUTE_SERVICE",
              "TAG_ISSUANCE_PANEL",
              "DISPUTE_HISTORIC_LEAD",
              "OEM_DOCUMENT_UPLOAD_LEAD"
            ]
          },
          "tag_sequence_number": {
            "type": "string"
          },
          "vehicle_registration_number": {
            "type": "string"
          },
          "back_rc_id": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "front_rc_id": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "action_type": {
            "type": "string",
            "enum": [
              "ACTIVATION",
              "REUPLOAD",
              "VIN_TO_VRN",
              "RMN_UPDATE",
              "DOWNLOAD_CHALLAN",
              "VRN_UPDATE"
            ]
          },
          "allow_activation_or_reupload": {
            "type": "boolean"
          }
        }
      },
      "TisIhmclTagDetailRequest": {
        "required": [
          "vehicleNo"
        ],
        "type": "object",
        "properties": {
          "vehicleNo": {
            "type": "string",
            "example": "HR26Y5383"
          }
        }
      },
      "PricingSchemeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "productName": {
            "type": "string"
          },
          "securityAmount": {
            "type": "number",
            "format": "double"
          },
          "threshold": {
            "type": "number",
            "format": "double"
          },
          "tagCost": {
            "type": "number",
            "format": "double"
          },
          "topUpAmount": {
            "type": "integer",
            "format": "int32"
          },
          "totalCost": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "TisIhmclTagDetailResponse": {
        "type": "object",
        "properties": {
          "tagSeqNum": {
            "type": "string",
            "example": "2222220000000002"
          },
          "epcId": {
            "type": "string",
            "example": "34161FA82026C81C020280C0"
          },
          "vehicleNo": {
            "type": "string",
            "example": "HR26Y5383"
          },
          "pricingScheme": {
            "$ref": "#/components/schemas/PricingSchemeResponse"
          },
          "tid": {
            "type": "string"
          }
        }
      },
      "RecommendVehicleClassRequest": {
        "type": "object",
        "properties": {
          "weight": {
            "type": "integer",
            "format": "int32"
          },
          "noOfAxle": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RecommendVehicleClassResponse": {
        "type": "object",
        "properties": {
          "possibleVehicleClasses": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "CartItemGGBC": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "sku": {
            "type": "string"
          },
          "product_id": {
            "type": "integer",
            "format": "int64"
          },
          "item_id": {
            "type": "string"
          },
          "meta_data": {
            "$ref": "#/components/schemas/MetadataGGBC"
          }
        }
      },
      "MetadataGGBC": {
        "required": [
          "customerId",
          "customerName",
          "pricingSchemeId",
          "requestType",
          "tagSeqNum"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "salesApp": {
            "type": "string"
          },
          "requestType": {
            "type": "string"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "customerName": {
            "type": "string"
          },
          "tagSeqNum": {
            "type": "string"
          },
          "vehicleClass": {
            "type": "string",
            "enum": [
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "20"
            ]
          },
          "vehicleType": {
            "type": "string",
            "enum": [
              "1",
              "0"
            ]
          },
          "distributionChannelId": {
            "type": "integer",
            "format": "int32"
          },
          "pricingSchemeId": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "leadId": {
            "type": "string"
          },
          "vehicleNo": {
            "type": "string"
          },
          "vehicleId": {
            "type": "string"
          },
          "isIhmclFlow": {
            "type": "boolean"
          },
          "leadCreatedTime": {
            "type": "integer",
            "format": "int64"
          },
          "roleType": {
            "type": "string"
          },
          "modelId": {
            "type": "integer",
            "format": "int64",
            "example": 100
          },
          "makeId": {
            "type": "integer",
            "format": "int64",
            "example": 100
          },
          "engineNumber": {
            "type": "string"
          },
          "vehicle_registrtion_number": {
            "type": "string"
          },
          "vehicle_class": {
            "type": "string"
          },
          "is_replacement": {
            "type": "boolean"
          }
        }
      },
      "PreValidateOrderRequestGGBC": {
        "type": "object",
        "properties": {
          "cart_items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CartItemGGBC"
            }
          },
          "req_id": {
            "type": "string"
          },
          "customer_id": {
            "type": "integer",
            "format": "int64"
          },
          "customer_info": {
            "$ref": "#/components/schemas/CustomerInfo"
          }
        }
      },
      "CartPaymentFailNotify": {
        "type": "object",
        "properties": {
          "gateway_response": {
            "$ref": "#/components/schemas/GatewayResponse"
          }
        }
      },
      "GatewayResponse": {
        "type": "object",
        "properties": {
          "RESPCODE": {
            "type": "string"
          },
          "RESPMSG": {
            "type": "string"
          }
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "order_id": {
            "type": "integer",
            "format": "int64"
          },
          "meta_data": {
            "$ref": "#/components/schemas/MetadataGGBC"
          }
        }
      },
      "NotificationRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            }
          },
          "selling_price": {
            "type": "integer",
            "format": "int32"
          },
          "site_id": {
            "type": "integer",
            "format": "int32"
          },
          "mobile_verified": {
            "type": "boolean"
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "pg_amount": {
            "type": "string"
          },
          "transaction_number": {
            "type": "string"
          },
          "payment_method": {
            "type": "string"
          },
          "kind": {
            "type": "integer",
            "format": "int32"
          },
          "bank_transaction_id": {
            "type": "string"
          },
          "payment_bank": {
            "type": "string"
          },
          "gateway": {
            "type": "string"
          },
          "transaction_response": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "created_at": {
            "type": "string"
          },
          "pg_response_code": {
            "type": "string"
          },
          "order_id": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "mid": {
            "type": "string"
          }
        }
      },
      "NetcReqDetails": {
        "type": "object",
        "properties": {
          "tag_id": {
            "type": "string"
          },
          "vehicle_t_id": {
            "type": "string"
          },
          "vehicle_reg_no": {
            "type": "string"
          }
        }
      },
      "NetcRespDetails": {
        "type": "object",
        "properties": {
          "resp_code": {
            "type": "string"
          },
          "err_code": {
            "type": "string"
          },
          "err_code_mapping": {
            "type": "string"
          },
          "result": {
            "type": "string"
          },
          "vehicle_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VehicleDetails"
            }
          }
        }
      },
      "VehicleDetails": {
        "type": "object",
        "properties": {
          "tag_id": {
            "type": "string"
          },
          "reg_number": {
            "type": "string"
          },
          "t_id": {
            "type": "string"
          },
          "vehicle_class": {
            "type": "string"
          },
          "tag_status": {
            "type": "string"
          },
          "issue_date": {
            "type": "string"
          },
          "exception_codes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "bank_id": {
            "type": "string"
          },
          "commercial_vehicle": {
            "type": "string"
          }
        }
      },
      "ValidateIssuanceRequest": {
        "required": [
          "distributionChannelId",
          "pricingSchemeId",
          "requestType",
          "tagSeqNum",
          "vehicleClass",
          "vehicleType"
        ],
        "type": "object",
        "properties": {
          "requestType": {
            "type": "string",
            "description": "this api accept 'validate' and 'submit'",
            "example": "validate"
          },
          "customerId": {
            "type": "integer",
            "format": "int64",
            "example": 1000324123
          },
          "customerName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "example": "John Snow"
          },
          "tagSeqNum": {
            "type": "string",
            "example": "20031488"
          },
          "vehicleClass": {
            "type": "string",
            "example": "4",
            "enum": [
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "20"
            ]
          },
          "vehicleType": {
            "type": "string",
            "example": "1",
            "enum": [
              "1",
              "0"
            ]
          },
          "distributionChannelId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "pricingSchemeId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "john.snow@gmail.com"
          },
          "leadId": {
            "type": "string",
            "example": "7f56c350-917d-43a3-8186-6a5a8f48f08d"
          },
          "vehicleNo": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "example": "HR26Y5383"
          },
          "vehicleId": {
            "type": "string"
          },
          "roleType": {
            "type": "string",
            "example": "Role1"
          },
          "modelId": {
            "type": "integer",
            "format": "int64",
            "example": 100
          },
          "otherModel": {
            "type": "string",
            "example": "Maruti 800"
          },
          "makeId": {
            "type": "integer",
            "format": "int64",
            "example": 100
          },
          "state": {
            "type": "string",
            "example": "Jammu & Kashmir"
          },
          "leadCreatedTime": {
            "type": "integer",
            "format": "int64",
            "example": 1598613193000
          },
          "engineNumber": {
            "type": "string"
          },
          "tafAmount": {
            "type": "number",
            "format": "double"
          },
          "isReplacement": {
            "type": "boolean"
          }
        }
      },
      "IssuanceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "FetchOELeadDataRequest": {
        "required": [
          "tsn"
        ],
        "type": "object",
        "properties": {
          "tsn": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "FetchLeadInfoDTO": {
        "type": "object",
        "properties": {
          "leadId": {
            "type": "string"
          },
          "documentList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageData"
            }
          },
          "stage": {
            "type": "string",
            "enum": [
              "LEAD_NOT_PRESENT",
              "LEAD_CREATED",
              "LEAD_POSTED",
              "DOCUMENT_UPLOADED",
              "DATA_ENTRY_ALLOCATION_REJECTED",
              "DATA_ENTRY_ACTION_PENDING",
              "FASTAG_ISSUANCE_FAILURE",
              "FASTAG_ISSUANCE_SUCCESS",
              "PANEL_SUCCESS",
              "FASTAG_QC_SUCCESS_SYNC_PASS",
              "FASTAG_QC_SUCCESS_SYNC_FAIL",
              "LEAD_SUCCESSFULLY_CLOSED",
              "DOC_MIGRATION_SUCCESS",
              "DOC_MIGRATION_FAILURE",
              "KYB_WALLET_ID_EDIT_SUCCESS",
              "KYB_WALLET_ID_ERROR",
              "KYB_SUCCESS",
              "KYB_ERROR",
              "DATA_ENTRY_REJECTED",
              "FASTAG_QC_FAILURE_SYNC_FAIL",
              "FASTAG_QC_FAILURE_SYNC_PASS",
              "LEAD_FORCEFULLY_CLOSED"
            ]
          },
          "createdTime": {
            "type": "integer",
            "format": "int64"
          },
          "updatedTime": {
            "type": "integer",
            "format": "int64"
          },
          "agentDetails": {
            "$ref": "#/components/schemas/AgentData"
          },
          "custId": {
            "type": "string"
          },
          "creatorCustId": {
            "type": "string"
          },
          "solutionAdditionalInfo": {
            "$ref": "#/components/schemas/SolutionAdditionalResponseMetaData"
          },
          "solutionTypeLevel2": {
            "type": "string"
          },
          "solutionTypeLevel3": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FetchOELeadResponse": {
        "type": "object",
        "properties": {
          "responseList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FetchOELeadResponseDto"
            }
          }
        }
      },
      "FetchOELeadResponseDto": {
        "type": "object",
        "properties": {
          "allLeads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FetchLeadInfoDTO"
            }
          },
          "source": {
            "type": "string",
            "enum": [
              "PPBL",
              "OCL",
              "NA"
            ]
          }
        }
      },
      "SolutionAdditionalResponseMetaData": {
        "type": "object",
        "properties": {
          "INITIATING_CHANNEL": {
            "type": "string"
          },
          "FASTAG_VEHICLE_NUMBER": {
            "type": "string"
          },
          "FASTAG_TAG_SEQUENCE_NUMBER": {
            "type": "string"
          },
          "FASTAG_PAYMENT_DONE": {
            "type": "string"
          },
          "LEAD_TYPE": {
            "type": "string"
          },
          "FASTAG_VEHICLE_CLASS": {
            "type": "string"
          }
        }
      },
      "CreateDocumentLeadRequest": {
        "required": [
          "action_type",
          "back_rc_id",
          "front_rc_id",
          "tsn",
          "vrn"
        ],
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "enum": [
              "HISTORIC_LEAD",
              "BULK_DOCUMENT_UPLOAD_LEAD",
              "SINGLE_DOCUMENT_UPLOAD_LEAD",
              "DISPUTE_SERVICE",
              "TAG_ISSUANCE_PANEL",
              "DISPUTE_HISTORIC_LEAD",
              "OEM_DOCUMENT_UPLOAD_LEAD"
            ]
          },
          "tsn": {
            "type": "integer",
            "format": "int64"
          },
          "vrn": {
            "type": "string"
          },
          "updated_vrn": {
            "type": "string"
          },
          "vin": {
            "type": "string"
          },
          "engine_number": {
            "type": "string"
          },
          "back_rc_id": {
            "type": "string"
          },
          "front_rc_id": {
            "type": "string"
          },
          "vehicle_dms_id": {
            "type": "string"
          },
          "gvw_dms_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tag_dms_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "other_dms_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "side_axle_and_number_plate_dms_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "side_axle_without_number_plate_dms_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "number_plate_without_side_axle_dms_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "action_type": {
            "type": "string",
            "enum": [
              "ACTIVATION",
              "REUPLOAD",
              "VIN_TO_VRN",
              "RMN_UPDATE",
              "DOWNLOAD_CHALLAN",
              "VRN_UPDATE"
            ]
          },
          "oem_and_efkon_check": {
            "type": "boolean"
          },
          "allow_activation_or_reupload": {
            "type": "boolean"
          },
          "allow_approved_lead": {
            "type": "boolean"
          },
          "flow_type": {
            "type": "string",
            "enum": [
              "RETAIL_QC_RE_VERIFICATION",
              "DISPUTE",
              "RETAIL_GG_BC",
              "RETAIL_E_COMMERCE_FRESH_ISSUANCE",
              "RETAIL_E_COMMERCE_PAST_ISSUANCE",
              "RETAIL_VIN_TO_VRN",
              "RETAIL_ACTIVATE_FASTAG",
              "RETAIL_DOCUMENT_VERIFICATION_TIS",
              "RETAIL_IHMCL",
              "RETAIL_RMN_UPDATE",
              "RETAIL_VRN_UPDATE",
              "CORPORATE_QC_RE_VERIFICATION",
              "CORPORATE_GG_BC",
              "CORPORATE_VIN_TO_VRN",
              "CORPORATE_ACTIVATE_FASTAG",
              "CORPORATE_DOCUMENT_VERIFICATION_TIS",
              "RETAIL_DIY_FRESH_ISSUANCE",
              "OEM_ACTIVATE_FASTAG",
              "UNKNOWN_FLOW_TYPE",
              "OEM_VAHAN",
              "OEM_UPDATE_DETAILS"
            ]
          },
          "sale_certificate": {
            "type": "string"
          },
          "insurance_copy": {
            "type": "string"
          }
        }
      },
      "CreateDocumentLeadResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "leadId": {
            "type": "string"
          }
        }
      },
      "BuyNowRequest": {
        "required": [
          "docsInfo"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/MetadataGGBC"
          },
          "docsInfo": {
            "$ref": "#/components/schemas/DocsInfo"
          }
        }
      },
      "DocsInfo": {
        "required": [
          "backRcId",
          "frontRcId"
        ],
        "type": "object",
        "properties": {
          "backRcId": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "frontRcId": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "MultiValueMapStringString": {
        "type": "object",
        "properties": {
          "all": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "writeOnly": true
          },
          "empty": {
            "type": "boolean"
          }
        },
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "PartyOnboardRequest": {
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "notificationUrl": {
            "type": "string"
          }
        }
      },
      "PartyOnboardResponse": {
        "type": "object",
        "properties": {
          "secretKey": {
            "type": "string"
          }
        }
      },
      "CorporateOnboardRequest": {
        "type": "object",
        "properties": {
          "mobileNumber": {
            "type": "string"
          },
          "corporateName": {
            "type": "string"
          }
        }
      },
      "CorporateOnboardResponse": {
        "type": "object",
        "properties": {
          "corporateId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BulkIssuanceRecordV2": {
        "type": "object",
        "properties": {
          "VRN": {
            "type": "string"
          },
          "VIN": {
            "type": "string"
          },
          "TSN": {
            "type": "integer",
            "format": "int64"
          },
          "VEHICLE CLASS": {
            "type": "string"
          },
          "ISSUER PHONE NUMBER": {
            "type": "string"
          },
          "ISSUE AS USER SUSPENDED": {
            "type": "string"
          },
          "VEHICLE TYPE NON-COMM": {
            "type": "string"
          }
        }
      },
      "PartyCorporateIssuancePayload": {
        "type": "object",
        "properties": {
          "corporateId": {
            "type": "integer",
            "format": "int64"
          },
          "mobileNumber": {
            "type": "string"
          }
        }
      },
      "PartyCorporateIssuanceResponse": {
        "type": "object",
        "properties": {
          "fileTrackingId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AcceptSelfLinkingRequest": {
        "type": "object",
        "properties": {
          "tag_sequence_number": {
            "type": "integer",
            "format": "int64"
          },
          "lead_id": {
            "type": "string"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          },
          "customer_id": {
            "type": "integer",
            "format": "int64"
          },
          "rc_front_dms_id": {
            "type": "string"
          },
          "rc_back_dms_id": {
            "type": "string"
          },
          "sale_certificate_dms_id": {
            "type": "string"
          },
          "insurance_certificate_dms_id": {
            "type": "string"
          }
        }
      },
      "CommonResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PaymentCallBackResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "TagSuspendToggleRequest": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "SUSPEND",
              "UNSUSPEND"
            ]
          },
          "reason": {
            "type": "string"
          },
          "epc_id": {
            "type": "string"
          },
          "user_id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ToggleSuspensionResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "VerifyOtpRequest": {
        "required": [
          "otp",
          "transactionId"
        ],
        "type": "object",
        "properties": {
          "otp": {
            "type": "string",
            "example": "981130"
          },
          "state": {
            "type": "string"
          },
          "transactionId": {
            "type": "string"
          }
        }
      },
      "VerifyOtpDasboardResponse": {
        "type": "object",
        "properties": {
          "otpStatus": {
            "type": "string"
          }
        }
      },
      "GenerateOtpRequest": {
        "required": [
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "phoneNumber": {
            "type": "string",
            "example": "9811309455"
          },
          "oldTransactionId": {
            "type": "string"
          }
        }
      },
      "GenerateOtpResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          }
        }
      },
      "GetAutoSuggestionListRequest": {
        "required": [
          "corporateName"
        ],
        "type": "object",
        "properties": {
          "corporateName": {
            "type": "string"
          }
        }
      },
      "GetAutoSuggestionCorporatesResponse": {
        "type": "object",
        "properties": {
          "corporateId": {
            "type": "integer",
            "format": "int64"
          },
          "corporateName": {
            "type": "string"
          }
        }
      },
      "GetAutoSuggestionListResponse": {
        "type": "object",
        "properties": {
          "autoSuggestionResponseList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetAutoSuggestionCorporatesResponse"
            }
          }
        }
      },
      "CorporateSearchRequest": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "integer",
            "format": "int64"
          },
          "vehicle_number": {
            "type": "string"
          },
          "customer_id": {
            "type": "integer",
            "format": "int64"
          },
          "tag_seq_num": {
            "type": "integer",
            "format": "int64"
          },
          "email_id": {
            "type": "string"
          }
        }
      },
      "CorporateSearchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/CorporateSearchResponse"
          },
          "statusCode": {
            "type": "string"
          },
          "corporateName": {
            "type": "string"
          },
          "corporateId": {
            "type": "integer",
            "format": "int64"
          },
          "nonClosedTagCount": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "thresholdAmount": {
            "type": "number",
            "format": "double"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "GetPendingReqCorporateRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "5",
              "10",
              "15",
              "20",
              "25",
              "30",
              "35",
              "40",
              "45"
            ]
          },
          "corporateId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "GetPendingReqCorporateResponse": {
        "type": "object",
        "properties": {
          "totalRecords": {
            "type": "integer",
            "format": "int64"
          },
          "corporatePendingReqList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PendingRequestCorporateResponse"
            }
          }
        }
      },
      "PendingRequestCorporateResponse": {
        "type": "object",
        "properties": {
          "corporateName": {
            "type": "string"
          },
          "noOfVehicles": {
            "type": "integer",
            "format": "int32"
          },
          "custId": {
            "type": "integer",
            "format": "int64"
          },
          "paymentMode": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "paymentDoneOn": {
            "type": "string"
          },
          "paymentLink": {
            "type": "string"
          },
          "bankPaymentTxnId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "show_chk_sts_btn": {
            "type": "boolean"
          },
          "show_res_link_btn": {
            "type": "boolean"
          },
          "show_disc_btn": {
            "type": "boolean"
          }
        }
      },
      "CorporateIssuanceStatusRequest": {
        "type": "object",
        "properties": {
          "encodedRequestId": {
            "type": "string"
          }
        }
      },
      "GetCorporateHistoryRequest": {
        "type": "object",
        "properties": {
          "corporateId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CorporateHistoryResponse": {
        "type": "object",
        "properties": {
          "requestSubmittedOn": {
            "type": "string"
          },
          "noOfVehicles": {
            "type": "integer",
            "format": "int64"
          },
          "paymentMode": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "paymentDoneOn": {
            "type": "string"
          },
          "pgPaymentTxnId": {
            "type": "string"
          },
          "bankPaymentTxnId": {
            "type": "string"
          },
          "corporateRequestId": {
            "type": "integer",
            "format": "int64"
          },
          "jobId": {
            "type": "integer",
            "format": "int64"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "GetCorporateHistoryResponse": {
        "type": "object",
        "properties": {
          "corporateHistoryResponseList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CorporateHistoryResponse"
            }
          },
          "totalRecords": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CorporateIssuanceRequestV2": {
        "required": [
          "corporateName",
          "paymentMode"
        ],
        "type": "object",
        "properties": {
          "corporateName": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "example": "Maruti Udyog pvt"
          },
          "corporateId": {
            "type": "integer",
            "format": "int64",
            "example": 100234
          },
          "customerId": {
            "type": "integer",
            "format": "int64",
            "example": 1000324123
          },
          "transactionId": {
            "type": "string"
          },
          "vcWiseProductIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductForVehicleClass"
            }
          },
          "sessionId": {
            "type": "string"
          },
          "paymentMode": {
            "type": "string",
            "enum": [
              "0",
              "1"
            ]
          },
          "corporateIssuanceType": {
            "type": "string",
            "enum": [
              "PARTY",
              "PAYTM"
            ]
          },
          "clientId": {
            "type": "integer",
            "format": "int64"
          },
          "trackingId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductForVehicleClass": {
        "type": "object",
        "properties": {
          "pid": {
            "type": "integer",
            "format": "int64"
          },
          "vc": {
            "type": "string",
            "enum": [
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "20"
            ]
          }
        }
      },
      "DistributionChannel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "posPropertyId": {
            "type": "integer",
            "format": "int32"
          },
          "salesApp": {
            "type": "string",
            "enum": [
              "Efkon",
              "GG",
              "BC",
              "OEM",
              "Ecommerce",
              "CORPORATE",
              "IHMCL",
              "DIY_AMAZON",
              "DIY_MALL",
              "DIY_BANK_DISTRIBUTOR",
              "DIY",
              "DIY_P4B",
              "DIY_FLIPKART",
              "DIY_CHANNEL_NO_13",
              "DIY_CHANNEL_NO_14",
              "DIY_CHANNEL_NO_15",
              "DIY_CHANNEL_NO_16",
              "DIY_CHANNEL_NO_17",
              "DIY_CHANNEL_NO_18",
              "DIY_Affiliates_1",
              "DIY_Affiliates",
              "DIY_CHANNEL_NO_21",
              "DIY_CHANNEL_NO_22",
              "DIY_CHANNEL_NO_23",
              "DIY_CHANNEL_NO_24",
              "DIY_CHANNEL_NO_25",
              "DIY_CHANNEL_NO_26",
              "DIY_CHANNEL_NO_27",
              "DIY_CHANNEL_NO_28",
              "DIY_CHANNEL_NO_29",
              "DIY_CHANNEL_NO_30",
              "DIY_CHANNEL_NO_31",
              "DIY_CHANNEL_NO_32",
              "DIY_CHANNEL_NO_33",
              "DIY_CHANNEL_NO_34",
              "DIY_CHANNEL_NO_35",
              "DIY_CHANNEL_NO_36",
              "DIY_CHANNEL_NO_37",
              "DIY_CHANNEL_NO_38",
              "DIY_CHANNEL_NO_39",
              "DIY_CHANNEL_NO_40",
              "DIY_CHANNEL_NO_41",
              "DIY_CHANNEL_NO_42",
              "DIY_CHANNEL_NO_43",
              "DIY_CHANNEL_NO_44",
              "DIY_CHANNEL_NO_45",
              "DIY_CHANNEL_NO_46",
              "DIY_CHANNEL_NO_47",
              "DIY_CHANNEL_NO_48",
              "DIY_CHANNEL_NO_49",
              "DIY_CHANNEL_NO_50",
              "DIY_CHANNEL_NO_51",
              "DIY_CHANNEL_NO_52",
              "DIY_CHANNEL_NO_53",
              "DIY_CHANNEL_NO_54",
              "DIY_CHANNEL_NO_55",
              "DIY_CHANNEL_NO_56",
              "DIY_CHANNEL_NO_57",
              "DIY_CHANNEL_NO_58",
              "DIY_CHANNEL_NO_59",
              "DIY_CHANNEL_NO_60",
              "DIY_CHANNEL_NO_61",
              "DIY_CHANNEL_NO_62",
              "DIY_CHANNEL_NO_63",
              "DIY_CHANNEL_NO_64",
              "DIY_CHANNEL_NO_65",
              "DIY_CHANNEL_NO_66",
              "DIY_CHANNEL_NO_67",
              "DIY_CHANNEL_NO_68",
              "DIY_CHANNEL_NO_69",
              "DIY_CHANNEL_NO_70",
              "DIY_CHANNEL_NO_71",
              "DIY_CHANNEL_NO_72",
              "DIY_CHANNEL_NO_73",
              "DIY_CHANNEL_NO_74",
              "DIY_CHANNEL_NO_75",
              "DIY_CHANNEL_NO_76",
              "DIY_CHANNEL_NO_77",
              "DIY_CHANNEL_NO_78",
              "DIY_CHANNEL_NO_79",
              "DIY_CHANNEL_NO_80",
              "DIY_CHANNEL_NO_81",
              "DIY_CHANNEL_NO_82",
              "DIY_CHANNEL_NO_83",
              "DIY_CHANNEL_NO_84",
              "DIY_CHANNEL_NO_85",
              "DIY_CHANNEL_NO_86",
              "DIY_CHANNEL_NO_87",
              "DIY_CHANNEL_NO_88",
              "DIY_CHANNEL_NO_89",
              "DIY_CHANNEL_NO_90",
              "DIY_CHANNEL_NO_91",
              "DIY_CHANNEL_NO_92",
              "DIY_CHANNEL_NO_93",
              "DIY_CHANNEL_NO_94",
              "DIY_CHANNEL_NO_95",
              "DIY_CHANNEL_NO_96",
              "DIY_CHANNEL_NO_97",
              "DIY_CHANNEL_NO_98",
              "DIY_CHANNEL_NO_99",
              "DIY_CHANNEL_NO_100",
              "DIY_CHANNEL_NO_101",
              "DIY_CHANNEL_NO_102",
              "DIY_CHANNEL_NO_103",
              "DIY_CHANNEL_NO_104",
              "DIY_CHANNEL_NO_105",
              "DIY_CHANNEL_NO_106",
              "DIY_CHANNEL_NO_107",
              "DIY_CHANNEL_NO_108",
              "DIY_CHANNEL_NO_109",
              "DIY_CHANNEL_NO_110",
              "DIY_CHANNEL_NO_111",
              "DIY_CHANNEL_NO_112",
              "PARTY"
            ]
          },
          "roleType": {
            "type": "string"
          }
        }
      },
      "ListDropdownResponseV2": {
        "type": "object",
        "properties": {
          "pricingSchemes": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PricingSchemeResponseV2"
              }
            }
          },
          "distributionChannels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionChannel"
            }
          },
          "paymentModes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMode"
            }
          },
          "vehicleClasses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VehicleClassDropdown"
            }
          }
        }
      },
      "PaymentMode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "PricingSchemeResponseV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "pr_nm": {
            "type": "string"
          },
          "s_amt": {
            "type": "number",
            "format": "double"
          },
          "th": {
            "type": "number",
            "format": "double"
          },
          "cost": {
            "type": "number",
            "format": "double"
          },
          "topup_amount": {
            "type": "number",
            "format": "double"
          },
          "tot": {
            "type": "number",
            "format": "double"
          },
          "auto": {
            "type": "boolean"
          },
          "pr_tp": {
            "type": "integer",
            "format": "int32"
          },
          "is_repl": {
            "type": "boolean"
          }
        }
      },
      "VehicleClassDropdown": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "vehicleType": {
            "type": "string"
          },
          "vehicleDescription": {
            "type": "string"
          }
        }
      },
      "MerchantCallbackResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "statusMessage": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/Result"
          }
        }
      },
      "Result": {
        "type": "object",
        "properties": {
          "mid": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "paytmOrderId": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "commissionAmount": {
            "type": "string"
          },
          "taxAmount": {
            "type": "string"
          },
          "rrn": {
            "type": "string"
          },
          "beneficiaryName": {
            "type": "string"
          }
        }
      },
      "ValidateReplacementRequest": {
        "required": [
          "vehicleNo",
          "walkingCustomerId"
        ],
        "type": "object",
        "properties": {
          "vehicleNo": {
            "type": "string",
            "example": "HR26Y5383"
          },
          "walkingCustomerId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EfkonTagDepositUpdationRecord": {
        "type": "object",
        "properties": {
          "epcId": {
            "type": "string"
          },
          "secAmt": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "EfkonTagDepositUpdationResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "RevokeTagClosureRequest": {
        "type": "object",
        "properties": {
          "tagSequenceNumber": {
            "type": "integer",
            "format": "int64"
          },
          "comments": {
            "type": "string"
          }
        }
      },
      "TagClosureRevokeResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          }
        }
      },
      "CorporateData": {
        "type": "object",
        "properties": {
          "corporateId": {
            "type": "integer",
            "format": "int64"
          },
          "corporateName": {
            "type": "string"
          }
        }
      },
      "VerifyOtpResponse": {
        "type": "object",
        "properties": {
          "otpStatus": {
            "type": "string"
          },
          "kycStatus": {
            "type": "string",
            "enum": [
              "DONE",
              "PRIMITIVE",
              "EXPIRED"
            ]
          },
          "isFullKYCDone": {
            "type": "boolean"
          },
          "isCorporateMinKycDone": {
            "type": "boolean"
          },
          "corporateData": {
            "$ref": "#/components/schemas/CorporateData"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "tafAmount": {
            "type": "number",
            "format": "double"
          },
          "isTafAmountEditable": {
            "type": "boolean"
          },
          "walkingCustomerId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "VerifyMobileNumberRequest": {
        "type": "object",
        "properties": {
          "mobileNumber": {
            "type": "string"
          },
          "oldTransactionId": {
            "type": "string"
          }
        }
      },
      "VerifyMobileNumberResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "transactionId": {
            "type": "string"
          },
          "tafAmount": {
            "type": "number",
            "format": "double"
          },
          "isTafAmountEditable": {
            "type": "boolean"
          },
          "documentsRequired": {
            "type": "boolean"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        }
      },
      "IssuanceReceiptRequest": {
        "required": [
          "downloadIssuanceReceipt",
          "sendReceiptToCustomer",
          "sendToOtherMailId",
          "sendToRegisteredMailId"
        ],
        "type": "object",
        "properties": {
          "downloadIssuanceReceipt": {
            "type": "boolean"
          },
          "sendReceiptToCustomer": {
            "type": "boolean"
          },
          "sendToRegisteredMailId": {
            "type": "boolean"
          },
          "sendToOtherMailId": {
            "type": "boolean"
          },
          "toEmail": {
            "pattern": "^[a-zA-Z0-9_!#$%&’*+/=?{|}~^.-]+@[a-zA-Z0-9.-]+$",
            "type": "string"
          },
          "tsn": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "IssuanceReceiptResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "TafUpdateRequest": {
        "type": "object",
        "properties": {
          "epcId": {
            "type": "string"
          },
          "tafAmount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ValidateTagRequest": {
        "required": [
          "tagSequenceNumber"
        ],
        "type": "object",
        "properties": {
          "tagSequenceNumber": {
            "type": "integer",
            "format": "int64",
            "example": 50001000
          }
        }
      },
      "FixedTagCostResponse": {
        "type": "object",
        "properties": {
          "fixedTagCost": {
            "type": "string"
          }
        }
      },
      "BankSmsPayload": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "templateId": {
            "type": "integer",
            "format": "int32"
          },
          "params": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "DocumentDetail": {
        "required": [
          "docType",
          "ext",
          "fileName",
          "fileStream",
          "mimeType"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string"
          },
          "mimeType": {
            "type": "string"
          },
          "docType": {
            "type": "string",
            "enum": [
              "rc_front",
              "rc_back",
              "sale_certificate",
              "insurance_copy",
              "vehicle_image",
              "gvw_image",
              "tag_image",
              "side_axle_without_number_plate_image",
              "side_axle_and_number_plate_image",
              "number_plate_without_side_axle_image",
              "other_image"
            ]
          },
          "ext": {
            "type": "string"
          },
          "fileStream": {
            "type": "string"
          }
        }
      },
      "OemIssuanceRequest": {
        "required": [
          "distributionChannelId",
          "issuanceSource",
          "pricingSchemeId",
          "requestType",
          "tagSeqNum",
          "transactionId",
          "vehicleClass",
          "vehicleType"
        ],
        "type": "object",
        "properties": {
          "requestType": {
            "type": "string",
            "description": "this api accept 'validate' and 'submit'",
            "example": "validate"
          },
          "customerId": {
            "type": "integer",
            "format": "int64",
            "example": 1000324123
          },
          "customerName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "example": "John Snow"
          },
          "tagSeqNum": {
            "type": "string",
            "example": "20031488"
          },
          "vehicleClass": {
            "type": "string",
            "example": "4",
            "enum": [
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "20"
            ]
          },
          "vehicleType": {
            "type": "string",
            "example": "1",
            "enum": [
              "1",
              "0"
            ]
          },
          "distributionChannelId": {
            "type": "integer",
            "format": "int32",
            "example": 1
          },
          "pricingSchemeId": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "email": {
            "type": "string",
            "example": "john.snow@gmail.com"
          },
          "leadId": {
            "type": "string",
            "example": "7f56c350-917d-43a3-8186-6a5a8f48f08d"
          },
          "vehicleNo": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "example": "HR26Y5383"
          },
          "vehicleId": {
            "type": "string"
          },
          "roleType": {
            "type": "string",
            "example": "Role1"
          },
          "modelId": {
            "type": "integer",
            "format": "int64",
            "example": 100
          },
          "otherModel": {
            "type": "string",
            "example": "Maruti 800"
          },
          "makeId": {
            "type": "integer",
            "format": "int64",
            "example": 100
          },
          "state": {
            "type": "string",
            "example": "Jammu & Kashmir"
          },
          "leadCreatedTime": {
            "type": "integer",
            "format": "int64",
            "example": 1598613193000
          },
          "engineNumber": {
            "type": "string"
          },
          "tafAmount": {
            "type": "number",
            "format": "double"
          },
          "isReplacement": {
            "type": "boolean"
          },
          "docType": {
            "type": "string",
            "enum": [
              "voter",
              "dl",
              "passport",
              "nrega_job"
            ]
          },
          "docNo": {
            "type": "string"
          },
          "isKycDone": {
            "type": "boolean"
          },
          "transactionId": {
            "type": "string"
          },
          "documentDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentDetail"
            }
          },
          "shouldContinueWithoutMinKyc": {
            "type": "boolean"
          },
          "issuanceSource": {
            "type": "string",
            "enum": [
              "DIY_FLOW",
              "OTP_FLOW"
            ]
          },
          "isRcRequired": {
            "type": "boolean"
          }
        }
      },
      "RetryIssuanceRequest": {
        "type": "object",
        "properties": {
          "epcId": {
            "type": "string"
          }
        }
      },
      "RetryIssuanceResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "EcomCancelledOrderCloseTagsRequest": {
        "required": [
          "order_id",
          "tsn"
        ],
        "type": "object",
        "properties": {
          "tsn": {
            "type": "integer",
            "format": "int64"
          },
          "order_id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "EcomCancelledOrderCloseTagsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "DownloadTagClosureReportRequest": {
        "required": [
          "report_type"
        ],
        "type": "object",
        "properties": {
          "report_type": {
            "type": "string",
            "enum": [
              "CLOSURE_INITIATED",
              "PERMANENTLY_CLOSED"
            ]
          },
          "date": {
            "type": "string"
          }
        }
      },
      "DownloadTagClosureReportResponse": {
        "type": "object",
        "properties": {
          "job_id": {
            "type": "integer",
            "format": "int64"
          },
          "error_message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "ViewAndSearchRequest": {
        "type": "object",
        "properties": {
          "tagSequenceNumber": {
            "type": "integer",
            "format": "int64"
          },
          "chassisNumber": {
            "type": "string"
          },
          "vehicleNumber": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          }
        }
      },
      "ListOemPendingIssuanceResponse": {
        "type": "object",
        "properties": {
          "oemPendingIssuanceList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OemPendingIssuance"
            }
          },
          "status": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          },
          "currentPageCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "OemPendingIssuance": {
        "type": "object",
        "properties": {
          "tagSeqNumber": {
            "type": "integer",
            "format": "int64"
          },
          "vehicleNumber": {
            "type": "string"
          },
          "chassisNumber": {
            "type": "string"
          },
          "engineNumber": {
            "type": "string"
          },
          "vehicleClass": {
            "type": "string",
            "enum": [
              "4",
              "5",
              "6",
              "7",
              "8",
              "9",
              "10",
              "11",
              "12",
              "13",
              "14",
              "15",
              "16",
              "17",
              "20"
            ]
          }
        }
      },
      "MarkFailedRmnRequest": {
        "type": "object",
        "properties": {
          "rmnIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "ListDropdownResponse": {
        "type": "object",
        "properties": {
          "pricingSchemes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingSchemeResponse"
            }
          },
          "distributionChannels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DistributionChannel"
            }
          },
          "paymentModes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentMode"
            }
          },
          "vehicleClasses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VehicleClassDropdown"
            }
          }
        }
      },
      "GetMakeModelListResponse": {
        "type": "object",
        "properties": {
          "makeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MakeModelDTO"
            }
          },
          "makeModelDetails": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MakeModelDTO"
              }
            }
          }
        }
      },
      "MakeModelDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "GetTncResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "responseCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "success": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TncData"
            }
          }
        }
      },
      "TncData": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "createdDate": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "shortUrl": {
            "type": "string"
          },
          "consent": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Data": {
        "type": "object",
        "properties": {
          "duration": {
            "type": "number",
            "format": "double"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "PingResponse": {
        "type": "object",
        "properties": {
          "programName": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "release": {
            "type": "string"
          },
          "datetime": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Data"
          },
          "commonsRelease": {
            "type": "string"
          },
          "commonsVersion": {
            "type": "string"
          }
        }
      },
      "DependentService": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "duration": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "programName": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "release": {
            "type": "string"
          },
          "datetime": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string"
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "dependentService": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DependentService"
            }
          },
          "data": {
            "$ref": "#/components/schemas/Data"
          },
          "commonsRelease": {
            "type": "string"
          },
          "commonsVersion": {
            "type": "string"
          }
        }
      },
      "GetTagForClosureResponse": {
        "type": "object",
        "properties": {
          "tsn": {
            "type": "integer",
            "format": "int64"
          },
          "issuance_status": {
            "type": "string",
            "enum": [
              "PAYMENT_PENDING",
              "PAYMENT_FAILED",
              "PAYMENT_SUCCESS",
              "NPCI_ADD_SUCCESS",
              "WALLET_CREATED",
              "ISSUED_WITH_LOW_BALANCE",
              "SUSPEND",
              "ACTIVE",
              "USER_SUSPENDED",
              "CLOSED",
              "REPLACED",
              "CLOSURE_INITIATED",
              "PANEL_SUSPENDED"
            ]
          },
          "can_initiate_closure": {
            "type": "boolean"
          },
          "comment": {
            "type": "string"
          }
        }
      },
      "BaseResponseOemDetailsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "response": {
            "$ref": "#/components/schemas/OemDetailsResponse"
          },
          "statusCode": {
            "type": "string"
          }
        }
      },
      "OemDetailsResponse": {
        "type": "object",
        "properties": {
          "rcRequired": {
            "type": "boolean"
          },
          "oemVahanEnabled": {
            "type": "boolean"
          }
        }
      },
      "GetCloseableTagRequest": {
        "required": [
          "limit",
          "offset"
        ],
        "type": "object",
        "properties": {
          "offset": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "limit": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CloseableTagData": {
        "type": "object",
        "properties": {
          "tsn": {
            "type": "integer",
            "format": "int64"
          },
          "customer_id": {
            "type": "integer",
            "format": "int64"
          },
          "threshold": {
            "type": "number",
            "format": "double"
          },
          "security": {
            "type": "number",
            "format": "double"
          },
          "tag_cost": {
            "type": "number",
            "format": "double"
          },
          "over_due_amount": {
            "type": "number",
            "format": "double"
          },
          "closure_maker_user_id": {
            "type": "integer",
            "format": "int64"
          },
          "closure_maker_time": {
            "type": "string"
          }
        }
      },
      "GetCloseableTagResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int64"
          },
          "closeable_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloseableTagData"
            }
          }
        }
      }
    }
  }
}